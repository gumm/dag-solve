(function(){'use strict';var module$utils$utils={default:{}};module$utils$utils.default.idGen=function*(opt_n){let i=opt_n?opt_n+1:0;while(true)yield i++};const argRefSymbol$$module$utils$utils="X";const whatType$$module$utils$utils=(x)=>typeof x;module$utils$utils.default.isNumber=(n)=>whatType$$module$utils$utils(n)==="number"&&!Number.isNaN(n);module$utils$utils.default.isString=(n)=>whatType$$module$utils$utils(n)==="string";
module$utils$utils.default.isRefString=(m)=>(0,module$utils$utils.default.isString)(m)&&!Number.isNaN((0,module$utils$utils.default.getRefIndex)(m));module$utils$utils.default.getRefIndex=(m)=>parseInt(m.split("$").join(""),10)-1;module$utils$utils.default.sameArr=(a,b)=>a.length===b.length&&a.every((c,i)=>b[i]===c);module$utils$utils.default.isDef=(t)=>t!==undefined;module$utils$utils.default.alwaysUndef=()=>undefined;const alwaysFalse$$module$utils$utils=()=>false;
module$utils$utils.default.isIn=(n)=>(p,[k,s])=>s.has(n)?p.push(k)&&p:p;module$utils$utils.default.max=(arr)=>Math.max(...arr);module$utils$utils.default.enumSet=(arr,k,v)=>[...(new Map(arr)).set(k,v).entries()];module$utils$utils.default.enumUnSet=(arr,k)=>arr.filter((e)=>e[0]!==k);module$utils$utils.default.grabId=(n)=>n._id;module$utils$utils.default.tail=(arr)=>arr[arr.length?arr.length-1:undefined];
module$utils$utils.default.pRound=(precision)=>{const factor=Math.pow(10,precision);return(number)=>Math.round(number*factor)/factor};module$utils$utils.default.safeJsonParse=(json)=>{let parsed;try{parsed=JSON.parse(json)}catch(e){}return parsed};module$utils$utils.default.makeComparator=(c)=>{const m={"!=":(v1,v2)=>v1!=v2,"==":(v1,v2)=>v1==v2,"!==":(v1,v2)=>v1!==v2,"===":(v1,v2)=>v1===v2,"<=":(v1,v2)=>v1<=v2,">=":(v1,v2)=>v1>=v2,"<":(v1,v2)=>v1<v2,">":(v1,v2)=>v1>v2};return m[c]||alwaysFalse$$module$utils$utils};
module$utils$utils.default.genOutput=(rv)=>{const m={"vu":(b,v1,v2)=>b?v1:undefined,10:(b,v1,v2)=>b?1:0,"tf":(b,v1,v2)=>b,"ab":(b,v1,v2)=>b?v1:v2};return m[rv]||module$utils$utils.default.alwaysUndef};module$utils$utils.default.mathCleaner=(s)=>{const arithmeticOperators=["+","-","*","/","%","(",")"];const numbers=["0","1","2","3","4","5","6","7","8","9","."];const ref=["$"," "];const combined=[...arithmeticOperators,...numbers,...ref];return[...s].filter((e)=>combined.includes(e)).join("")};
module$utils$utils.default.funcMaker=(fn)=>{try{return[null,new Function(argRefSymbol$$module$utils$utils,`try { return ${fn}; } catch(e) { return; }`)]}catch(err){return[`Could not make a function with "${fn}"`,module$utils$utils.default.alwaysUndef]}};
module$utils$utils.default.mathFunc=(m,a)=>{let err="Unable to clean math";let f=module$utils$utils.default.alwaysUndef;if((0,module$utils$utils.default.isString)(m)){const s=a.reduce((p,c,i)=>p.split(`$${i+1}`).join(`${argRefSymbol$$module$utils$utils}[${i}]`),(0,module$utils$utils.default.mathCleaner)(m));if(!s.includes("$"))[err,f]=(0,module$utils$utils.default.funcMaker)(s)}else[err,f]=(0,module$utils$utils.default.funcMaker)(m);return[err,f]};
module$utils$utils.default.leafNodes=(G)=>{const C=[...G.keys()].reduce((p,c)=>p.set(c,0)||p,new Map);[...G.values()].forEach((arr)=>arr.forEach((e)=>C.set(e,C.has(e)?C.get(e)+1:0)));const Q=[...G.keys()].filter((e)=>C.get(e)===0);return[C,Q]};module$utils$utils.default.topoSort=(G)=>{const [C,Q]=(0,module$utils$utils.default.leafNodes)(G);const S=[];while(Q.length){const u=Q.pop();S.push(u);G.get(u).forEach((v)=>{C.set(v,C.get(v)-1);if(C.get(v)===0)Q.push(v)})}return S};
module$utils$utils.default.removeOrphans=(G)=>{for(const [k,s]of G.entries())if(s.size===0&&k!==0){G.delete(k);for(const v of G.values())v.delete(k)}if([...G.entries()].reduce((p,c)=>p||c[1].size===0&&c[0]!==0,false))(0,module$utils$utils.default.removeOrphans)(G);return G};var module$node_modules$ramda$dist$ramda={default:{}};module$node_modules$ramda$dist$ramda.default.pipe=function(){if(arguments.length===0)throw new Error("pipe requires at least one argument");return _arity$$module$node_modules$ramda$dist$ramda(arguments[0].length,(0,module$node_modules$ramda$dist$ramda.default.reduce)(_pipe$$module$node_modules$ramda$dist$ramda,arguments[0],(0,module$node_modules$ramda$dist$ramda.default.tail)(arguments)))};
module$node_modules$ramda$dist$ramda.default.compose=function(){if(arguments.length===0)throw new Error("compose requires at least one argument");return module$node_modules$ramda$dist$ramda.default.pipe.apply(this,(0,module$node_modules$ramda$dist$ramda.default.reverse)(arguments))};
module$node_modules$ramda$dist$ramda.default.composeK=function(){if(arguments.length===0)throw new Error("composeK requires at least one argument");var init=Array.prototype.slice.call(arguments);var last=init.pop();return(0,module$node_modules$ramda$dist$ramda.default.compose)(module$node_modules$ramda$dist$ramda.default.compose.apply(this,(0,module$node_modules$ramda$dist$ramda.default.map)(module$node_modules$ramda$dist$ramda.default.chain,init)),last)};
module$node_modules$ramda$dist$ramda.default.pipeP=function(){if(arguments.length===0)throw new Error("pipeP requires at least one argument");return _arity$$module$node_modules$ramda$dist$ramda(arguments[0].length,(0,module$node_modules$ramda$dist$ramda.default.reduce)(_pipeP$$module$node_modules$ramda$dist$ramda,arguments[0],(0,module$node_modules$ramda$dist$ramda.default.tail)(arguments)))};
module$node_modules$ramda$dist$ramda.default.composeP=function(){if(arguments.length===0)throw new Error("composeP requires at least one argument");return module$node_modules$ramda$dist$ramda.default.pipeP.apply(this,(0,module$node_modules$ramda$dist$ramda.default.reverse)(arguments))};
module$node_modules$ramda$dist$ramda.default.pipeK=function(){if(arguments.length===0)throw new Error("pipeK requires at least one argument");return module$node_modules$ramda$dist$ramda.default.composeK.apply(this,(0,module$node_modules$ramda$dist$ramda.default.reverse)(arguments))};function _isPlaceholder$$module$node_modules$ramda$dist$ramda(a){return a!=null&&typeof a==="object"&&a["@@functional/placeholder"]===true}
function _curry1$$module$node_modules$ramda$dist$ramda(fn){return function f1(a){if(arguments.length===0||_isPlaceholder$$module$node_modules$ramda$dist$ramda(a))return f1;else return fn.apply(this,arguments)}}module$node_modules$ramda$dist$ramda.default.always=_curry1$$module$node_modules$ramda$dist$ramda(function always(val){return function(){return val}});module$node_modules$ramda$dist$ramda.default.F=(0,module$node_modules$ramda$dist$ramda.default.always)(false);
module$node_modules$ramda$dist$ramda.default.T=(0,module$node_modules$ramda$dist$ramda.default.always)(true);module$node_modules$ramda$dist$ramda.default.__={"@@functional/placeholder":true};
function _curry2$$module$node_modules$ramda$dist$ramda(fn){return function f2(a,b){switch(arguments.length){case 0:return f2;case 1:return _isPlaceholder$$module$node_modules$ramda$dist$ramda(a)?f2:_curry1$$module$node_modules$ramda$dist$ramda(function(_b){return fn(a,_b)});default:return _isPlaceholder$$module$node_modules$ramda$dist$ramda(a)&&_isPlaceholder$$module$node_modules$ramda$dist$ramda(b)?f2:_isPlaceholder$$module$node_modules$ramda$dist$ramda(a)?_curry1$$module$node_modules$ramda$dist$ramda(function(_a){return fn(_a,
b)}):_isPlaceholder$$module$node_modules$ramda$dist$ramda(b)?_curry1$$module$node_modules$ramda$dist$ramda(function(_b){return fn(a,_b)}):fn(a,b)}}}module$node_modules$ramda$dist$ramda.default.add=_curry2$$module$node_modules$ramda$dist$ramda(function add(a,b){return Number(a)+Number(b)});
function _concat$$module$node_modules$ramda$dist$ramda(set1,set2){set1=set1||[];set2=set2||[];var idx;var len1=set1.length;var len2=set2.length;var result=[];idx=0;while(idx<len1){result[result.length]=set1[idx];idx+=1}idx=0;while(idx<len2){result[result.length]=set2[idx];idx+=1}return result}
function _arity$$module$node_modules$ramda$dist$ramda(n,fn){switch(n){case 0:return function(){return fn.apply(this,arguments)};case 1:return function(a0){return fn.apply(this,arguments)};case 2:return function(a0,a1){return fn.apply(this,arguments)};case 3:return function(a0,a1,a2){return fn.apply(this,arguments)};case 4:return function(a0,a1,a2,a3){return fn.apply(this,arguments)};case 5:return function(a0,a1,a2,a3,a4){return fn.apply(this,arguments)};case 6:return function(a0,a1,a2,a3,a4,a5){return fn.apply(this,
arguments)};case 7:return function(a0,a1,a2,a3,a4,a5,a6){return fn.apply(this,arguments)};case 8:return function(a0,a1,a2,a3,a4,a5,a6,a7){return fn.apply(this,arguments)};case 9:return function(a0,a1,a2,a3,a4,a5,a6,a7,a8){return fn.apply(this,arguments)};case 10:return function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9){return fn.apply(this,arguments)};default:throw new Error("First argument to _arity must be a non-negative integer no greater than ten");}}
function _curryN$$module$node_modules$ramda$dist$ramda(length,received,fn){return function(){var combined=[];var argsIdx=0;var left=length;var combinedIdx=0;while(combinedIdx<received.length||argsIdx<arguments.length){var result;if(combinedIdx<received.length&&(!_isPlaceholder$$module$node_modules$ramda$dist$ramda(received[combinedIdx])||argsIdx>=arguments.length))result=received[combinedIdx];else{result=arguments[argsIdx];argsIdx+=1}combined[combinedIdx]=result;if(!_isPlaceholder$$module$node_modules$ramda$dist$ramda(result))left-=
1;combinedIdx+=1}return left<=0?fn.apply(this,combined):_arity$$module$node_modules$ramda$dist$ramda(left,_curryN$$module$node_modules$ramda$dist$ramda(length,combined,fn))}}module$node_modules$ramda$dist$ramda.default.curryN=_curry2$$module$node_modules$ramda$dist$ramda(function curryN(length,fn){if(length===1)return _curry1$$module$node_modules$ramda$dist$ramda(fn);return _arity$$module$node_modules$ramda$dist$ramda(length,_curryN$$module$node_modules$ramda$dist$ramda(length,[],fn))});
module$node_modules$ramda$dist$ramda.default.addIndex=_curry1$$module$node_modules$ramda$dist$ramda(function addIndex(fn){return(0,module$node_modules$ramda$dist$ramda.default.curryN)(fn.length,function(){var idx=0;var origFn=arguments[0];var list=arguments[arguments.length-1];var args=Array.prototype.slice.call(arguments,0);args[0]=function(){var result=origFn.apply(this,_concat$$module$node_modules$ramda$dist$ramda(arguments,[idx,list]));idx+=1;return result};return fn.apply(this,args)})});
function _curry3$$module$node_modules$ramda$dist$ramda(fn){return function f3(a,b,c){switch(arguments.length){case 0:return f3;case 1:return _isPlaceholder$$module$node_modules$ramda$dist$ramda(a)?f3:_curry2$$module$node_modules$ramda$dist$ramda(function(_b,_c){return fn(a,_b,_c)});case 2:return _isPlaceholder$$module$node_modules$ramda$dist$ramda(a)&&_isPlaceholder$$module$node_modules$ramda$dist$ramda(b)?f3:_isPlaceholder$$module$node_modules$ramda$dist$ramda(a)?_curry2$$module$node_modules$ramda$dist$ramda(function(_a,
_c){return fn(_a,b,_c)}):_isPlaceholder$$module$node_modules$ramda$dist$ramda(b)?_curry2$$module$node_modules$ramda$dist$ramda(function(_b,_c){return fn(a,_b,_c)}):_curry1$$module$node_modules$ramda$dist$ramda(function(_c){return fn(a,b,_c)});default:return _isPlaceholder$$module$node_modules$ramda$dist$ramda(a)&&_isPlaceholder$$module$node_modules$ramda$dist$ramda(b)&&_isPlaceholder$$module$node_modules$ramda$dist$ramda(c)?f3:_isPlaceholder$$module$node_modules$ramda$dist$ramda(a)&&_isPlaceholder$$module$node_modules$ramda$dist$ramda(b)?
_curry2$$module$node_modules$ramda$dist$ramda(function(_a,_b){return fn(_a,_b,c)}):_isPlaceholder$$module$node_modules$ramda$dist$ramda(a)&&_isPlaceholder$$module$node_modules$ramda$dist$ramda(c)?_curry2$$module$node_modules$ramda$dist$ramda(function(_a,_c){return fn(_a,b,_c)}):_isPlaceholder$$module$node_modules$ramda$dist$ramda(b)&&_isPlaceholder$$module$node_modules$ramda$dist$ramda(c)?_curry2$$module$node_modules$ramda$dist$ramda(function(_b,_c){return fn(a,_b,_c)}):_isPlaceholder$$module$node_modules$ramda$dist$ramda(a)?
_curry1$$module$node_modules$ramda$dist$ramda(function(_a){return fn(_a,b,c)}):_isPlaceholder$$module$node_modules$ramda$dist$ramda(b)?_curry1$$module$node_modules$ramda$dist$ramda(function(_b){return fn(a,_b,c)}):_isPlaceholder$$module$node_modules$ramda$dist$ramda(c)?_curry1$$module$node_modules$ramda$dist$ramda(function(_c){return fn(a,b,_c)}):fn(a,b,c)}}}
module$node_modules$ramda$dist$ramda.default.adjust=_curry3$$module$node_modules$ramda$dist$ramda(function adjust(fn,idx,list){if(idx>=list.length||idx<-list.length)return list;var start=idx<0?list.length:0;var _idx=start+idx;var _list=_concat$$module$node_modules$ramda$dist$ramda(list);_list[_idx]=fn(list[_idx]);return _list});var _isArray$$module$node_modules$ramda$dist$ramda=Array.isArray||function _isArray(val){return val!=null&&val.length>=0&&Object.prototype.toString.call(val)==="[object Array]"};
function _isTransformer$$module$node_modules$ramda$dist$ramda(obj){return typeof obj["@@transducer/step"]==="function"}
function _dispatchable$$module$node_modules$ramda$dist$ramda(methodNames,xf,fn){return function(){if(arguments.length===0)return fn();var args=Array.prototype.slice.call(arguments,0);var obj=args.pop();if(!_isArray$$module$node_modules$ramda$dist$ramda(obj)){var idx=0;while(idx<methodNames.length){if(typeof obj[methodNames[idx]]==="function")return obj[methodNames[idx]].apply(obj,args);idx+=1}if(_isTransformer$$module$node_modules$ramda$dist$ramda(obj)){var transducer=xf.apply(null,args);return transducer(obj)}}return fn.apply(this,
arguments)}}function _reduced$$module$node_modules$ramda$dist$ramda(x){return x&&x["@@transducer/reduced"]?x:{"@@transducer/value":x,"@@transducer/reduced":true}}var _xfBase$$module$node_modules$ramda$dist$ramda={init:function(){return this.xf["@@transducer/init"]()},result:function(result){return this.xf["@@transducer/result"](result)}};function XAll$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f;this.all=true}
XAll$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;XAll$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(result){if(this.all)result=this.xf["@@transducer/step"](result,true);return this.xf["@@transducer/result"](result)};
XAll$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){if(!this.f(input)){this.all=false;result=_reduced$$module$node_modules$ramda$dist$ramda(this.xf["@@transducer/step"](result,false))}return result};var _xall$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xall(f,xf){return new XAll$$module$node_modules$ramda$dist$ramda(f,xf)});
module$node_modules$ramda$dist$ramda.default.all=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["all"],_xall$$module$node_modules$ramda$dist$ramda,function all(fn,list){var idx=0;while(idx<list.length){if(!fn(list[idx]))return false;idx+=1}return true}));module$node_modules$ramda$dist$ramda.default.max=_curry2$$module$node_modules$ramda$dist$ramda(function max(a,b){return b>a?b:a});
function _map$$module$node_modules$ramda$dist$ramda(fn,functor){var idx=0;var len=functor.length;var result=Array(len);while(idx<len){result[idx]=fn(functor[idx]);idx+=1}return result}function _isString$$module$node_modules$ramda$dist$ramda(x){return Object.prototype.toString.call(x)==="[object String]"}
var _isArrayLike$$module$node_modules$ramda$dist$ramda=_curry1$$module$node_modules$ramda$dist$ramda(function isArrayLike(x){if(_isArray$$module$node_modules$ramda$dist$ramda(x))return true;if(!x)return false;if(typeof x!=="object")return false;if(_isString$$module$node_modules$ramda$dist$ramda(x))return false;if(x.nodeType===1)return!!x.length;if(x.length===0)return true;if(x.length>0)return x.hasOwnProperty(0)&&x.hasOwnProperty(x.length-1);return false});
function XWrap$$module$node_modules$ramda$dist$ramda(fn){this.f=fn}XWrap$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=function(){throw new Error("init not implemented on XWrap");};XWrap$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(acc){return acc};XWrap$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(acc,x){return this.f(acc,x)};
function _xwrap$$module$node_modules$ramda$dist$ramda(fn){return new XWrap$$module$node_modules$ramda$dist$ramda(fn)}module$node_modules$ramda$dist$ramda.default.bind=_curry2$$module$node_modules$ramda$dist$ramda(function bind(fn,thisObj){return _arity$$module$node_modules$ramda$dist$ramda(fn.length,function(){return fn.apply(thisObj,arguments)})});
function _arrayReduce$$module$node_modules$ramda$dist$ramda(xf,acc,list){var idx=0;var len=list.length;while(idx<len){acc=xf["@@transducer/step"](acc,list[idx]);if(acc&&acc["@@transducer/reduced"]){acc=acc["@@transducer/value"];break}idx+=1}return xf["@@transducer/result"](acc)}
function _iterableReduce$$module$node_modules$ramda$dist$ramda(xf,acc,iter){var step=iter.next();while(!step.done){acc=xf["@@transducer/step"](acc,step.value);if(acc&&acc["@@transducer/reduced"]){acc=acc["@@transducer/value"];break}step=iter.next()}return xf["@@transducer/result"](acc)}
function _methodReduce$$module$node_modules$ramda$dist$ramda(xf,acc,obj,methodName){return xf["@@transducer/result"](obj[methodName]((0,module$node_modules$ramda$dist$ramda.default.bind)(xf["@@transducer/step"],xf),acc))}var symIterator$$module$node_modules$ramda$dist$ramda=typeof Symbol!=="undefined"?Symbol.iterator:"@@iterator";
function _reduce$$module$node_modules$ramda$dist$ramda(fn,acc,list){if(typeof fn==="function")fn=_xwrap$$module$node_modules$ramda$dist$ramda(fn);if(_isArrayLike$$module$node_modules$ramda$dist$ramda(list))return _arrayReduce$$module$node_modules$ramda$dist$ramda(fn,acc,list);if(typeof list["fantasy-land/reduce"]==="function")return _methodReduce$$module$node_modules$ramda$dist$ramda(fn,acc,list,"fantasy-land/reduce");if(list[symIterator$$module$node_modules$ramda$dist$ramda]!=null)return _iterableReduce$$module$node_modules$ramda$dist$ramda(fn,
acc,list[symIterator$$module$node_modules$ramda$dist$ramda]());if(typeof list.next==="function")return _iterableReduce$$module$node_modules$ramda$dist$ramda(fn,acc,list);if(typeof list.reduce==="function")return _methodReduce$$module$node_modules$ramda$dist$ramda(fn,acc,list,"reduce");throw new TypeError("reduce: list must be array or iterable");}function XMap$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f}
XMap$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;XMap$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=_xfBase$$module$node_modules$ramda$dist$ramda.result;XMap$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){return this.xf["@@transducer/step"](result,this.f(input))};
var _xmap$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xmap(f,xf){return new XMap$$module$node_modules$ramda$dist$ramda(f,xf)});function _has$$module$node_modules$ramda$dist$ramda(prop,obj){return Object.prototype.hasOwnProperty.call(obj,prop)}var toString$$module$node_modules$ramda$dist$ramda=Object.prototype.toString;
var _isArguments$$module$node_modules$ramda$dist$ramda=function(){return toString$$module$node_modules$ramda$dist$ramda.call(arguments)==="[object Arguments]"?function _isArguments(x){return toString$$module$node_modules$ramda$dist$ramda.call(x)==="[object Arguments]"}:function _isArguments(x){return _has$$module$node_modules$ramda$dist$ramda("callee",x)}};var hasEnumBug$$module$node_modules$ramda$dist$ramda=!{toString:null}.propertyIsEnumerable("toString");
var nonEnumerableProps$$module$node_modules$ramda$dist$ramda=["constructor","valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];var hasArgsEnumBug$$module$node_modules$ramda$dist$ramda=function(){return arguments.propertyIsEnumerable("length")}();var contains$$module$node_modules$ramda$dist$ramda=function contains(list,item){var idx=0;while(idx<list.length){if(list[idx]===item)return true;idx+=1}return false};
var _keys$$module$node_modules$ramda$dist$ramda=typeof Object.keys==="function"&&!hasArgsEnumBug$$module$node_modules$ramda$dist$ramda?function keys(obj){return Object(obj)!==obj?[]:Object.keys(obj)}:function keys(obj){if(Object(obj)!==obj)return[];var prop;var nIdx;var ks=[];var checkArgsLength=hasArgsEnumBug$$module$node_modules$ramda$dist$ramda&&_isArguments$$module$node_modules$ramda$dist$ramda(obj);for(prop in obj)if(_has$$module$node_modules$ramda$dist$ramda(prop,obj)&&(!checkArgsLength||prop!==
"length"))ks[ks.length]=prop;if(hasEnumBug$$module$node_modules$ramda$dist$ramda){nIdx=nonEnumerableProps$$module$node_modules$ramda$dist$ramda.length-1;while(nIdx>=0){prop=nonEnumerableProps$$module$node_modules$ramda$dist$ramda[nIdx];if(_has$$module$node_modules$ramda$dist$ramda(prop,obj)&&!contains$$module$node_modules$ramda$dist$ramda(ks,prop))ks[ks.length]=prop;nIdx-=1}}return ks};module$node_modules$ramda$dist$ramda.default.keys=_curry1$$module$node_modules$ramda$dist$ramda(_keys$$module$node_modules$ramda$dist$ramda);
module$node_modules$ramda$dist$ramda.default.map=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["fantasy-land/map","map"],_xmap$$module$node_modules$ramda$dist$ramda,function map(fn,functor){switch(Object.prototype.toString.call(functor)){case "[object Function]":return(0,module$node_modules$ramda$dist$ramda.default.curryN)(functor.length,function(){return fn.call(this,functor.apply(this,arguments))});case "[object Object]":return _reduce$$module$node_modules$ramda$dist$ramda(function(acc,
key){acc[key]=fn(functor[key]);return acc},{},(0,module$node_modules$ramda$dist$ramda.default.keys)(functor));default:return _map$$module$node_modules$ramda$dist$ramda(fn,functor)}}));module$node_modules$ramda$dist$ramda.default.path=_curry2$$module$node_modules$ramda$dist$ramda(function path(paths,obj){var val=obj;var idx=0;while(idx<paths.length){if(val==null)return;val=val[paths[idx]];idx+=1}return val});
module$node_modules$ramda$dist$ramda.default.prop=_curry2$$module$node_modules$ramda$dist$ramda(function prop(p,obj){return(0,module$node_modules$ramda$dist$ramda.default.path)([p],obj)});module$node_modules$ramda$dist$ramda.default.pluck=_curry2$$module$node_modules$ramda$dist$ramda(function pluck(p,list){return(0,module$node_modules$ramda$dist$ramda.default.map)((0,module$node_modules$ramda$dist$ramda.default.prop)(p),list)});module$node_modules$ramda$dist$ramda.default.reduce=_curry3$$module$node_modules$ramda$dist$ramda(_reduce$$module$node_modules$ramda$dist$ramda);
module$node_modules$ramda$dist$ramda.default.allPass=_curry1$$module$node_modules$ramda$dist$ramda(function allPass(preds){return(0,module$node_modules$ramda$dist$ramda.default.curryN)((0,module$node_modules$ramda$dist$ramda.default.reduce)(module$node_modules$ramda$dist$ramda.default.max,0,(0,module$node_modules$ramda$dist$ramda.default.pluck)("length",preds)),function(){var idx=0;var len=preds.length;while(idx<len){if(!preds[idx].apply(this,arguments))return false;idx+=1}return true})});
module$node_modules$ramda$dist$ramda.default.and=_curry2$$module$node_modules$ramda$dist$ramda(function and(a,b){return a&&b});function XAny$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f;this.any=false}XAny$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;
XAny$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(result){if(!this.any)result=this.xf["@@transducer/step"](result,false);return this.xf["@@transducer/result"](result)};XAny$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){if(this.f(input)){this.any=true;result=_reduced$$module$node_modules$ramda$dist$ramda(this.xf["@@transducer/step"](result,true))}return result};
var _xany$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xany(f,xf){return new XAny$$module$node_modules$ramda$dist$ramda(f,xf)});module$node_modules$ramda$dist$ramda.default.any=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["any"],_xany$$module$node_modules$ramda$dist$ramda,function any(fn,list){var idx=0;while(idx<list.length){if(fn(list[idx]))return true;idx+=1}return false}));
module$node_modules$ramda$dist$ramda.default.anyPass=_curry1$$module$node_modules$ramda$dist$ramda(function anyPass(preds){return(0,module$node_modules$ramda$dist$ramda.default.curryN)((0,module$node_modules$ramda$dist$ramda.default.reduce)(module$node_modules$ramda$dist$ramda.default.max,0,(0,module$node_modules$ramda$dist$ramda.default.pluck)("length",preds)),function(){var idx=0;var len=preds.length;while(idx<len){if(preds[idx].apply(this,arguments))return true;idx+=1}return false})});
module$node_modules$ramda$dist$ramda.default.ap=_curry2$$module$node_modules$ramda$dist$ramda(function ap(applyF,applyX){return typeof applyX["fantasy-land/ap"]==="function"?applyX["fantasy-land/ap"](applyF):typeof applyF.ap==="function"?applyF.ap(applyX):typeof applyF==="function"?function(x){return applyF(x)(applyX(x))}:_reduce$$module$node_modules$ramda$dist$ramda(function(acc,f){return _concat$$module$node_modules$ramda$dist$ramda(acc,(0,module$node_modules$ramda$dist$ramda.default.map)(f,applyX))},
[],applyF)});function _aperture$$module$node_modules$ramda$dist$ramda(n,list){var idx=0;var limit=list.length-(n-1);var acc=new Array(limit>=0?limit:0);while(idx<limit){acc[idx]=Array.prototype.slice.call(list,idx,idx+n);idx+=1}return acc}function XAperture$$module$node_modules$ramda$dist$ramda(n,xf){this.xf=xf;this.pos=0;this.full=false;this.acc=new Array(n)}XAperture$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;
XAperture$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(result){this.acc=null;return this.xf["@@transducer/result"](result)};XAperture$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){this.store(input);return this.full?this.xf["@@transducer/step"](result,this.getCopy()):result};
XAperture$$module$node_modules$ramda$dist$ramda.prototype.store=function(input){this.acc[this.pos]=input;this.pos+=1;if(this.pos===this.acc.length){this.pos=0;this.full=true}};XAperture$$module$node_modules$ramda$dist$ramda.prototype.getCopy=function(){return _concat$$module$node_modules$ramda$dist$ramda(Array.prototype.slice.call(this.acc,this.pos),Array.prototype.slice.call(this.acc,0,this.pos))};
var _xaperture$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xaperture(n,xf){return new XAperture$$module$node_modules$ramda$dist$ramda(n,xf)});module$node_modules$ramda$dist$ramda.default.aperture=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda([],_xaperture$$module$node_modules$ramda$dist$ramda,_aperture$$module$node_modules$ramda$dist$ramda));
module$node_modules$ramda$dist$ramda.default.append=_curry2$$module$node_modules$ramda$dist$ramda(function append(el,list){return _concat$$module$node_modules$ramda$dist$ramda(list,[el])});module$node_modules$ramda$dist$ramda.default.apply=_curry2$$module$node_modules$ramda$dist$ramda(function apply(fn,args){return fn.apply(this,args)});
module$node_modules$ramda$dist$ramda.default.values=_curry1$$module$node_modules$ramda$dist$ramda(function values(obj){var props=(0,module$node_modules$ramda$dist$ramda.default.keys)(obj);var len=props.length;var vals=[];var idx=0;while(idx<len){vals[idx]=obj[props[idx]];idx+=1}return vals});
module$node_modules$ramda$dist$ramda.default.applySpec=_curry1$$module$node_modules$ramda$dist$ramda(function applySpec(spec){spec=(0,module$node_modules$ramda$dist$ramda.default.map)(function(v){return typeof v=="function"?v:applySpec(v)},spec);return(0,module$node_modules$ramda$dist$ramda.default.curryN)((0,module$node_modules$ramda$dist$ramda.default.reduce)(module$node_modules$ramda$dist$ramda.default.max,0,(0,module$node_modules$ramda$dist$ramda.default.pluck)("length",(0,module$node_modules$ramda$dist$ramda.default.values)(spec))),
function(){var args=arguments;return(0,module$node_modules$ramda$dist$ramda.default.map)(function(f){return(0,module$node_modules$ramda$dist$ramda.default.apply)(f,args)},spec)})});module$node_modules$ramda$dist$ramda.default.applyTo=_curry2$$module$node_modules$ramda$dist$ramda(function applyTo(x,f){return f(x)});module$node_modules$ramda$dist$ramda.default.ascend=_curry3$$module$node_modules$ramda$dist$ramda(function ascend(fn,a,b){var aa=fn(a);var bb=fn(b);return aa<bb?-1:aa>bb?1:0});
module$node_modules$ramda$dist$ramda.default.assoc=_curry3$$module$node_modules$ramda$dist$ramda(function assoc(prop,val,obj){var result={};for(var p in obj)result[p]=obj[p];result[prop]=val;return result});var _isInteger$$module$node_modules$ramda$dist$ramda=Number.isInteger||function _isInteger(n){return n<<0===n};module$node_modules$ramda$dist$ramda.default.isNil=_curry1$$module$node_modules$ramda$dist$ramda(function isNil(x){return x==null});
module$node_modules$ramda$dist$ramda.default.assocPath=_curry3$$module$node_modules$ramda$dist$ramda(function assocPath(path,val,obj){if(path.length===0)return val;var idx=path[0];if(path.length>1){var nextObj=!(0,module$node_modules$ramda$dist$ramda.default.isNil)(obj)&&_has$$module$node_modules$ramda$dist$ramda(idx,obj)?obj[idx]:_isInteger$$module$node_modules$ramda$dist$ramda(path[1])?[]:{};val=assocPath(Array.prototype.slice.call(path,1),val,nextObj)}if(_isInteger$$module$node_modules$ramda$dist$ramda(idx)&&
_isArray$$module$node_modules$ramda$dist$ramda(obj)){var arr=[].concat(obj);arr[idx]=val;return arr}else return(0,module$node_modules$ramda$dist$ramda.default.assoc)(idx,val,obj)});
module$node_modules$ramda$dist$ramda.default.nAry=_curry2$$module$node_modules$ramda$dist$ramda(function nAry(n,fn){switch(n){case 0:return function(){return fn.call(this)};case 1:return function(a0){return fn.call(this,a0)};case 2:return function(a0,a1){return fn.call(this,a0,a1)};case 3:return function(a0,a1,a2){return fn.call(this,a0,a1,a2)};case 4:return function(a0,a1,a2,a3){return fn.call(this,a0,a1,a2,a3)};case 5:return function(a0,a1,a2,a3,a4){return fn.call(this,a0,a1,a2,a3,a4)};case 6:return function(a0,
a1,a2,a3,a4,a5){return fn.call(this,a0,a1,a2,a3,a4,a5)};case 7:return function(a0,a1,a2,a3,a4,a5,a6){return fn.call(this,a0,a1,a2,a3,a4,a5,a6)};case 8:return function(a0,a1,a2,a3,a4,a5,a6,a7){return fn.call(this,a0,a1,a2,a3,a4,a5,a6,a7)};case 9:return function(a0,a1,a2,a3,a4,a5,a6,a7,a8){return fn.call(this,a0,a1,a2,a3,a4,a5,a6,a7,a8)};case 10:return function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9){return fn.call(this,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)};default:throw new Error("First argument to nAry must be a non-negative integer no greater than ten");
}});module$node_modules$ramda$dist$ramda.default.binary=_curry1$$module$node_modules$ramda$dist$ramda(function binary(fn){return(0,module$node_modules$ramda$dist$ramda.default.nAry)(2,fn)});function _isFunction$$module$node_modules$ramda$dist$ramda(x){return Object.prototype.toString.call(x)==="[object Function]"}
module$node_modules$ramda$dist$ramda.default.liftN=_curry2$$module$node_modules$ramda$dist$ramda(function liftN(arity,fn){var lifted=(0,module$node_modules$ramda$dist$ramda.default.curryN)(arity,fn);return(0,module$node_modules$ramda$dist$ramda.default.curryN)(arity,function(){return _reduce$$module$node_modules$ramda$dist$ramda(module$node_modules$ramda$dist$ramda.default.ap,(0,module$node_modules$ramda$dist$ramda.default.map)(lifted,arguments[0]),Array.prototype.slice.call(arguments,1))})});
module$node_modules$ramda$dist$ramda.default.lift=_curry1$$module$node_modules$ramda$dist$ramda(function lift(fn){return(0,module$node_modules$ramda$dist$ramda.default.liftN)(fn.length,fn)});
module$node_modules$ramda$dist$ramda.default.both=_curry2$$module$node_modules$ramda$dist$ramda(function both(f,g){return _isFunction$$module$node_modules$ramda$dist$ramda(f)?function _both(){return f.apply(this,arguments)&&g.apply(this,arguments)}:(0,module$node_modules$ramda$dist$ramda.default.lift)(module$node_modules$ramda$dist$ramda.default.and)(f,g)});
module$node_modules$ramda$dist$ramda.default.curry=_curry1$$module$node_modules$ramda$dist$ramda(function curry(fn){return(0,module$node_modules$ramda$dist$ramda.default.curryN)(fn.length,fn)});module$node_modules$ramda$dist$ramda.default.call=(0,module$node_modules$ramda$dist$ramda.default.curry)(function call(fn){return fn.apply(this,Array.prototype.slice.call(arguments,1))});
function _makeFlat$$module$node_modules$ramda$dist$ramda(recursive){return function flatt(list){var value;var jlen;var j;var result=[];var idx=0;var ilen=list.length;while(idx<ilen){if(_isArrayLike$$module$node_modules$ramda$dist$ramda(list[idx])){value=recursive?flatt(list[idx]):list[idx];j=0;jlen=value.length;while(j<jlen){result[result.length]=value[j];j+=1}}else result[result.length]=list[idx];idx+=1}return result}}
function _forceReduced$$module$node_modules$ramda$dist$ramda(x){return{"@@transducer/value":x,"@@transducer/reduced":true}}
var preservingReduced$$module$node_modules$ramda$dist$ramda=function(xf){return{"@@transducer/init":_xfBase$$module$node_modules$ramda$dist$ramda.init,"@@transducer/result":function(result){return xf["@@transducer/result"](result)},"@@transducer/step":function(result,input){var ret=xf["@@transducer/step"](result,input);return ret["@@transducer/reduced"]?_forceReduced$$module$node_modules$ramda$dist$ramda(ret):ret}}};
var _flatCat$$module$node_modules$ramda$dist$ramda=function _xcat(xf){var rxf=preservingReduced$$module$node_modules$ramda$dist$ramda(xf);return{"@@transducer/init":_xfBase$$module$node_modules$ramda$dist$ramda.init,"@@transducer/result":function(result){return rxf["@@transducer/result"](result)},"@@transducer/step":function(result,input){return!_isArrayLike$$module$node_modules$ramda$dist$ramda(input)?_reduce$$module$node_modules$ramda$dist$ramda(rxf,result,[input]):_reduce$$module$node_modules$ramda$dist$ramda(rxf,
result,input)}}};var _xchain$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xchain(f,xf){return(0,module$node_modules$ramda$dist$ramda.default.map)(f,_flatCat$$module$node_modules$ramda$dist$ramda(xf))});
module$node_modules$ramda$dist$ramda.default.chain=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["fantasy-land/chain","chain"],_xchain$$module$node_modules$ramda$dist$ramda,function chain(fn,monad){if(typeof monad==="function")return function(x){return fn(monad(x))(x)};return _makeFlat$$module$node_modules$ramda$dist$ramda(false)((0,module$node_modules$ramda$dist$ramda.default.map)(fn,monad))}));
module$node_modules$ramda$dist$ramda.default.clamp=_curry3$$module$node_modules$ramda$dist$ramda(function clamp(min,max,value){if(min>max)throw new Error("min must not be greater than max in clamp(min, max, value)");return value<min?min:value>max?max:value});function _cloneRegExp$$module$node_modules$ramda$dist$ramda(pattern){return new RegExp(pattern.source,(pattern.global?"g":"")+(pattern.ignoreCase?"i":"")+(pattern.multiline?"m":"")+(pattern.sticky?"y":"")+(pattern.unicode?"u":""))}
module$node_modules$ramda$dist$ramda.default.type=_curry1$$module$node_modules$ramda$dist$ramda(function type(val){return val===null?"Null":val===undefined?"Undefined":Object.prototype.toString.call(val).slice(8,-1)});
function _clone$$module$node_modules$ramda$dist$ramda(value,refFrom,refTo,deep){var copy=function copy(copiedValue){var len=refFrom.length;var idx=0;while(idx<len){if(value===refFrom[idx])return refTo[idx];idx+=1}refFrom[idx+1]=value;refTo[idx+1]=copiedValue;for(var key in value)copiedValue[key]=deep?_clone$$module$node_modules$ramda$dist$ramda(value[key],refFrom,refTo,true):value[key];return copiedValue};switch((0,module$node_modules$ramda$dist$ramda.default.type)(value)){case "Object":return copy({});
case "Array":return copy([]);case "Date":return new Date(value.valueOf());case "RegExp":return _cloneRegExp$$module$node_modules$ramda$dist$ramda(value);default:return value}}module$node_modules$ramda$dist$ramda.default.clone=_curry1$$module$node_modules$ramda$dist$ramda(function clone(value){return value!=null&&typeof value.clone==="function"?value.clone():_clone$$module$node_modules$ramda$dist$ramda(value,[],[],true)});
module$node_modules$ramda$dist$ramda.default.comparator=_curry1$$module$node_modules$ramda$dist$ramda(function comparator(pred){return function(a,b){return pred(a,b)?-1:pred(b,a)?1:0}});module$node_modules$ramda$dist$ramda.default.not=_curry1$$module$node_modules$ramda$dist$ramda(function not(a){return!a});module$node_modules$ramda$dist$ramda.default.complement=(0,module$node_modules$ramda$dist$ramda.default.lift)(module$node_modules$ramda$dist$ramda.default.not);
function _pipe$$module$node_modules$ramda$dist$ramda(f,g){return function(){return g.call(this,f.apply(this,arguments))}}function _checkForMethod$$module$node_modules$ramda$dist$ramda(methodname,fn){return function(){var length=arguments.length;if(length===0)return fn();var obj=arguments[length-1];return _isArray$$module$node_modules$ramda$dist$ramda(obj)||typeof obj[methodname]!=="function"?fn.apply(this,arguments):obj[methodname].apply(obj,Array.prototype.slice.call(arguments,0,length-1))}}
module$node_modules$ramda$dist$ramda.default.slice=_curry3$$module$node_modules$ramda$dist$ramda(_checkForMethod$$module$node_modules$ramda$dist$ramda("slice",function slice(fromIndex,toIndex,list){return Array.prototype.slice.call(list,fromIndex,toIndex)}));module$node_modules$ramda$dist$ramda.default.tail=_curry1$$module$node_modules$ramda$dist$ramda(_checkForMethod$$module$node_modules$ramda$dist$ramda("tail",(0,module$node_modules$ramda$dist$ramda.default.slice)(1,Infinity)));
module$node_modules$ramda$dist$ramda.default.reverse=_curry1$$module$node_modules$ramda$dist$ramda(function reverse(list){return _isString$$module$node_modules$ramda$dist$ramda(list)?list.split("").reverse().join(""):Array.prototype.slice.call(list,0).reverse()});function _pipeP$$module$node_modules$ramda$dist$ramda(f,g){return function(){var ctx=this;return f.apply(ctx,arguments).then(function(x){return g.call(ctx,x)})}}
function _arrayFromIterator$$module$node_modules$ramda$dist$ramda(iter){var list=[];var next;while(!(next=iter.next()).done)list.push(next.value);return list}function _containsWith$$module$node_modules$ramda$dist$ramda(pred,x,list){var idx=0;var len=list.length;while(idx<len){if(pred(x,list[idx]))return true;idx+=1}return false}function _functionName$$module$node_modules$ramda$dist$ramda(f){var match=String(f).match(/^function (\w*)/);return match==null?"":match[1]}
module$node_modules$ramda$dist$ramda.default.identical=_curry2$$module$node_modules$ramda$dist$ramda(function identical(a,b){if(a===b)return a!==0||1/a===1/b;else return a!==a&&b!==b});
function _uniqContentEquals$$module$node_modules$ramda$dist$ramda(aIterator,bIterator,stackA,stackB){var a=_arrayFromIterator$$module$node_modules$ramda$dist$ramda(aIterator);var b=_arrayFromIterator$$module$node_modules$ramda$dist$ramda(bIterator);function eq(_a,_b){return _equals$$module$node_modules$ramda$dist$ramda(_a,_b,stackA.slice(),stackB.slice())}return!_containsWith$$module$node_modules$ramda$dist$ramda(function(b,aItem){return!_containsWith$$module$node_modules$ramda$dist$ramda(eq,aItem,
b)},b,a)}
function _equals$$module$node_modules$ramda$dist$ramda(a,b,stackA,stackB){if((0,module$node_modules$ramda$dist$ramda.default.identical)(a,b))return true;var typeA=(0,module$node_modules$ramda$dist$ramda.default.type)(a);if(typeA!==(0,module$node_modules$ramda$dist$ramda.default.type)(b))return false;if(a==null||b==null)return false;if(typeof a["fantasy-land/equals"]==="function"||typeof b["fantasy-land/equals"]==="function")return typeof a["fantasy-land/equals"]==="function"&&a["fantasy-land/equals"](b)&&typeof b["fantasy-land/equals"]===
"function"&&b["fantasy-land/equals"](a);if(typeof a.equals==="function"||typeof b.equals==="function")return typeof a.equals==="function"&&a.equals(b)&&typeof b.equals==="function"&&b.equals(a);switch(typeA){case "Arguments":case "Array":case "Object":if(typeof a.constructor==="function"&&_functionName$$module$node_modules$ramda$dist$ramda(a.constructor)==="Promise")return a===b;break;case "Boolean":case "Number":case "String":if(!(typeof a===typeof b&&(0,module$node_modules$ramda$dist$ramda.default.identical)(a.valueOf(),
b.valueOf())))return false;break;case "Date":if(!(0,module$node_modules$ramda$dist$ramda.default.identical)(a.valueOf(),b.valueOf()))return false;break;case "Error":return a.name===b.name&&a.message===b.message;case "RegExp":if(!(a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline&&a.sticky===b.sticky&&a.unicode===b.unicode))return false;break}var idx=stackA.length-1;while(idx>=0){if(stackA[idx]===a)return stackB[idx]===b;idx-=1}switch(typeA){case "Map":if(a.size!==
b.size)return false;return _uniqContentEquals$$module$node_modules$ramda$dist$ramda(a.entries(),b.entries(),stackA.concat([a]),stackB.concat([b]));case "Set":if(a.size!==b.size)return false;return _uniqContentEquals$$module$node_modules$ramda$dist$ramda(a.values(),b.values(),stackA.concat([a]),stackB.concat([b]));case "Arguments":case "Array":case "Object":case "Boolean":case "Number":case "String":case "Date":case "Error":case "RegExp":case "Int8Array":case "Uint8Array":case "Uint8ClampedArray":case "Int16Array":case "Uint16Array":case "Int32Array":case "Uint32Array":case "Float32Array":case "Float64Array":case "ArrayBuffer":break;
default:return false}var keysA=(0,module$node_modules$ramda$dist$ramda.default.keys)(a);if(keysA.length!==(0,module$node_modules$ramda$dist$ramda.default.keys)(b).length)return false;var extendedStackA=stackA.concat([a]);var extendedStackB=stackB.concat([b]);idx=keysA.length-1;while(idx>=0){var key=keysA[idx];if(!(_has$$module$node_modules$ramda$dist$ramda(key,b)&&_equals$$module$node_modules$ramda$dist$ramda(b[key],a[key],extendedStackA,extendedStackB)))return false;idx-=1}return true}
module$node_modules$ramda$dist$ramda.default.equals=_curry2$$module$node_modules$ramda$dist$ramda(function equals(a,b){return _equals$$module$node_modules$ramda$dist$ramda(a,b,[],[])});
function _indexOf$$module$node_modules$ramda$dist$ramda(list,a,idx){var inf;var item;if(typeof list.indexOf==="function")switch(typeof a){case "number":if(a===0){inf=1/a;while(idx<list.length){item=list[idx];if(item===0&&1/item===inf)return idx;idx+=1}return-1}else if(a!==a){while(idx<list.length){item=list[idx];if(typeof item==="number"&&item!==item)return idx;idx+=1}return-1}return list.indexOf(a,idx);case "string":case "boolean":case "function":case "undefined":return list.indexOf(a,idx);case "object":if(a===
null)return list.indexOf(a,idx)}while(idx<list.length){if((0,module$node_modules$ramda$dist$ramda.default.equals)(list[idx],a))return idx;idx+=1}return-1}function _contains$$module$node_modules$ramda$dist$ramda(a,list){return _indexOf$$module$node_modules$ramda$dist$ramda(list,a,0)>=0}
function _quote$$module$node_modules$ramda$dist$ramda(s){var escaped=s.replace(/\\/g,"\\\\").replace(/[\b]/g,"\\b").replace(/\f/g,"\\f").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t").replace(/\v/g,"\\v").replace(/\0/g,"\\0");return'"'+escaped.replace(/"/g,'\\"')+'"'}var pad$$module$node_modules$ramda$dist$ramda=function pad(n){return(n<10?"0":"")+n};
var _toISOString$$module$node_modules$ramda$dist$ramda=typeof Date.prototype.toISOString==="function"?function _toISOString(d){return d.toISOString()}:function _toISOString(d){return d.getUTCFullYear()+"-"+pad$$module$node_modules$ramda$dist$ramda(d.getUTCMonth()+1)+"-"+pad$$module$node_modules$ramda$dist$ramda(d.getUTCDate())+"T"+pad$$module$node_modules$ramda$dist$ramda(d.getUTCHours())+":"+pad$$module$node_modules$ramda$dist$ramda(d.getUTCMinutes())+":"+pad$$module$node_modules$ramda$dist$ramda(d.getUTCSeconds())+
"."+(d.getUTCMilliseconds()/1E3).toFixed(3).slice(2,5)+"Z"};function _complement$$module$node_modules$ramda$dist$ramda(f){return function(){return!f.apply(this,arguments)}}function _filter$$module$node_modules$ramda$dist$ramda(fn,list){var idx=0;var len=list.length;var result=[];while(idx<len){if(fn(list[idx]))result[result.length]=list[idx];idx+=1}return result}function _isObject$$module$node_modules$ramda$dist$ramda(x){return Object.prototype.toString.call(x)==="[object Object]"}
function XFilter$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f}XFilter$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;XFilter$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=_xfBase$$module$node_modules$ramda$dist$ramda.result;
XFilter$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){return this.f(input)?this.xf["@@transducer/step"](result,input):result};var _xfilter$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xfilter(f,xf){return new XFilter$$module$node_modules$ramda$dist$ramda(f,xf)});
module$node_modules$ramda$dist$ramda.default.filter=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["filter"],_xfilter$$module$node_modules$ramda$dist$ramda,function(pred,filterable){return _isObject$$module$node_modules$ramda$dist$ramda(filterable)?_reduce$$module$node_modules$ramda$dist$ramda(function(acc,key){if(pred(filterable[key]))acc[key]=filterable[key];return acc},{},(0,module$node_modules$ramda$dist$ramda.default.keys)(filterable)):_filter$$module$node_modules$ramda$dist$ramda(pred,
filterable)}));module$node_modules$ramda$dist$ramda.default.reject=_curry2$$module$node_modules$ramda$dist$ramda(function reject(pred,filterable){return(0,module$node_modules$ramda$dist$ramda.default.filter)(_complement$$module$node_modules$ramda$dist$ramda(pred),filterable)});
function _toString$$module$node_modules$ramda$dist$ramda(x,seen){var recur=function recur(y){var xs=seen.concat([x]);return _contains$$module$node_modules$ramda$dist$ramda(y,xs)?"<Circular>":_toString$$module$node_modules$ramda$dist$ramda(y,xs)};var mapPairs=function(obj,keys$$1){return _map$$module$node_modules$ramda$dist$ramda(function(k){return _quote$$module$node_modules$ramda$dist$ramda(k)+": "+recur(obj[k])},keys$$1.slice().sort())};switch(Object.prototype.toString.call(x)){case "[object Arguments]":return"(function() { return arguments; }("+
_map$$module$node_modules$ramda$dist$ramda(recur,x).join(", ")+"))";case "[object Array]":return"["+_map$$module$node_modules$ramda$dist$ramda(recur,x).concat(mapPairs(x,(0,module$node_modules$ramda$dist$ramda.default.reject)(function(k){return/^\d+$/.test(k)},(0,module$node_modules$ramda$dist$ramda.default.keys)(x)))).join(", ")+"]";case "[object Boolean]":return typeof x==="object"?"new Boolean("+recur(x.valueOf())+")":x.toString();case "[object Date]":return"new Date("+(isNaN(x.valueOf())?recur(NaN):
_quote$$module$node_modules$ramda$dist$ramda(_toISOString$$module$node_modules$ramda$dist$ramda(x)))+")";case "[object Null]":return"null";case "[object Number]":return typeof x==="object"?"new Number("+recur(x.valueOf())+")":1/x===-Infinity?"-0":x.toString(10);case "[object String]":return typeof x==="object"?"new String("+recur(x.valueOf())+")":_quote$$module$node_modules$ramda$dist$ramda(x);case "[object Undefined]":return"undefined";default:if(typeof x.toString==="function"){var repr=x.toString();
if(repr!=="[object Object]")return repr}return"{"+mapPairs(x,(0,module$node_modules$ramda$dist$ramda.default.keys)(x)).join(", ")+"}"}}module$node_modules$ramda$dist$ramda.default.toString=_curry1$$module$node_modules$ramda$dist$ramda(function toString(val){return _toString$$module$node_modules$ramda$dist$ramda(val,[])});
module$node_modules$ramda$dist$ramda.default.concat=_curry2$$module$node_modules$ramda$dist$ramda(function concat(a,b){if(_isArray$$module$node_modules$ramda$dist$ramda(a)){if(_isArray$$module$node_modules$ramda$dist$ramda(b))return a.concat(b);throw new TypeError((0,module$node_modules$ramda$dist$ramda.default.toString)(b)+" is not an array");}if(_isString$$module$node_modules$ramda$dist$ramda(a)){if(_isString$$module$node_modules$ramda$dist$ramda(b))return a+b;throw new TypeError((0,module$node_modules$ramda$dist$ramda.default.toString)(b)+
" is not a string");}if(a!=null&&_isFunction$$module$node_modules$ramda$dist$ramda(a["fantasy-land/concat"]))return a["fantasy-land/concat"](b);if(a!=null&&_isFunction$$module$node_modules$ramda$dist$ramda(a.concat))return a.concat(b);throw new TypeError((0,module$node_modules$ramda$dist$ramda.default.toString)(a)+' does not have a method named "concat" or "fantasy-land/concat"');});
module$node_modules$ramda$dist$ramda.default.cond=_curry1$$module$node_modules$ramda$dist$ramda(function cond(pairs){var arity=(0,module$node_modules$ramda$dist$ramda.default.reduce)(module$node_modules$ramda$dist$ramda.default.max,0,(0,module$node_modules$ramda$dist$ramda.default.map)(function(pair){return pair[0].length},pairs));return _arity$$module$node_modules$ramda$dist$ramda(arity,function(){var idx=0;while(idx<pairs.length){if(pairs[idx][0].apply(this,arguments))return pairs[idx][1].apply(this,
arguments);idx+=1}})});
module$node_modules$ramda$dist$ramda.default.constructN=_curry2$$module$node_modules$ramda$dist$ramda(function constructN(n,Fn){if(n>10)throw new Error("Constructor with greater than ten arguments");if(n===0)return function(){return new Fn};return(0,module$node_modules$ramda$dist$ramda.default.curry)((0,module$node_modules$ramda$dist$ramda.default.nAry)(n,function($0,$1,$2,$3,$4,$5,$6,$7,$8,$9){switch(arguments.length){case 1:return new Fn($0);case 2:return new Fn($0,$1);case 3:return new Fn($0,$1,
$2);case 4:return new Fn($0,$1,$2,$3);case 5:return new Fn($0,$1,$2,$3,$4);case 6:return new Fn($0,$1,$2,$3,$4,$5);case 7:return new Fn($0,$1,$2,$3,$4,$5,$6);case 8:return new Fn($0,$1,$2,$3,$4,$5,$6,$7);case 9:return new Fn($0,$1,$2,$3,$4,$5,$6,$7,$8);case 10:return new Fn($0,$1,$2,$3,$4,$5,$6,$7,$8,$9)}}))});
module$node_modules$ramda$dist$ramda.default.construct=_curry1$$module$node_modules$ramda$dist$ramda(function construct(Fn){return(0,module$node_modules$ramda$dist$ramda.default.constructN)(Fn.length,Fn)});module$node_modules$ramda$dist$ramda.default.contains=_curry2$$module$node_modules$ramda$dist$ramda(_contains$$module$node_modules$ramda$dist$ramda);
module$node_modules$ramda$dist$ramda.default.converge=_curry2$$module$node_modules$ramda$dist$ramda(function converge(after,fns){return(0,module$node_modules$ramda$dist$ramda.default.curryN)((0,module$node_modules$ramda$dist$ramda.default.reduce)(module$node_modules$ramda$dist$ramda.default.max,0,(0,module$node_modules$ramda$dist$ramda.default.pluck)("length",fns)),function(){var args=arguments;var context=this;return after.apply(context,_map$$module$node_modules$ramda$dist$ramda(function(fn){return fn.apply(context,
args)},fns))})});function XReduceBy$$module$node_modules$ramda$dist$ramda(valueFn,valueAcc,keyFn,xf){this.valueFn=valueFn;this.valueAcc=valueAcc;this.keyFn=keyFn;this.xf=xf;this.inputs={}}XReduceBy$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;
XReduceBy$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(result){var key;for(key in this.inputs)if(_has$$module$node_modules$ramda$dist$ramda(key,this.inputs)){result=this.xf["@@transducer/step"](result,this.inputs[key]);if(result["@@transducer/reduced"]){result=result["@@transducer/value"];break}}this.inputs=null;return this.xf["@@transducer/result"](result)};
XReduceBy$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){var key=this.keyFn(input);this.inputs[key]=this.inputs[key]||[key,this.valueAcc];this.inputs[key][1]=this.valueFn(this.inputs[key][1],input);return result};var _xreduceBy$$module$node_modules$ramda$dist$ramda=_curryN$$module$node_modules$ramda$dist$ramda(4,[],function _xreduceBy(valueFn,valueAcc,keyFn,xf){return new XReduceBy$$module$node_modules$ramda$dist$ramda(valueFn,valueAcc,keyFn,xf)});
module$node_modules$ramda$dist$ramda.default.reduceBy=_curryN$$module$node_modules$ramda$dist$ramda(4,[],_dispatchable$$module$node_modules$ramda$dist$ramda([],_xreduceBy$$module$node_modules$ramda$dist$ramda,function reduceBy(valueFn,valueAcc,keyFn,list){return _reduce$$module$node_modules$ramda$dist$ramda(function(acc,elt){var key=keyFn(elt);acc[key]=valueFn(_has$$module$node_modules$ramda$dist$ramda(key,acc)?acc[key]:valueAcc,elt);return acc},{},list)}));
module$node_modules$ramda$dist$ramda.default.countBy=(0,module$node_modules$ramda$dist$ramda.default.reduceBy)(function(acc,elem){return acc+1},0);module$node_modules$ramda$dist$ramda.default.dec=(0,module$node_modules$ramda$dist$ramda.default.add)(-1);module$node_modules$ramda$dist$ramda.default.defaultTo=_curry2$$module$node_modules$ramda$dist$ramda(function defaultTo(d,v){return v==null||v!==v?d:v});
module$node_modules$ramda$dist$ramda.default.descend=_curry3$$module$node_modules$ramda$dist$ramda(function descend(fn,a,b){var aa=fn(a);var bb=fn(b);return aa>bb?-1:aa<bb?1:0});
module$node_modules$ramda$dist$ramda.default.difference=_curry2$$module$node_modules$ramda$dist$ramda(function difference(first,second){var out=[];var idx=0;var firstLen=first.length;while(idx<firstLen){if(!_contains$$module$node_modules$ramda$dist$ramda(first[idx],second)&&!_contains$$module$node_modules$ramda$dist$ramda(first[idx],out))out[out.length]=first[idx];idx+=1}return out});
module$node_modules$ramda$dist$ramda.default.differenceWith=_curry3$$module$node_modules$ramda$dist$ramda(function differenceWith(pred,first,second){var out=[];var idx=0;var firstLen=first.length;while(idx<firstLen){if(!_containsWith$$module$node_modules$ramda$dist$ramda(pred,first[idx],second)&&!_containsWith$$module$node_modules$ramda$dist$ramda(pred,first[idx],out))out.push(first[idx]);idx+=1}return out});
module$node_modules$ramda$dist$ramda.default.dissoc=_curry2$$module$node_modules$ramda$dist$ramda(function dissoc(prop,obj){var result={};for(var p in obj)result[p]=obj[p];delete result[prop];return result});module$node_modules$ramda$dist$ramda.default.remove=_curry3$$module$node_modules$ramda$dist$ramda(function remove(start,count,list){var result=Array.prototype.slice.call(list,0);result.splice(start,count);return result});
module$node_modules$ramda$dist$ramda.default.update=_curry3$$module$node_modules$ramda$dist$ramda(function update(idx,x,list){return(0,module$node_modules$ramda$dist$ramda.default.adjust)((0,module$node_modules$ramda$dist$ramda.default.always)(x),idx,list)});
module$node_modules$ramda$dist$ramda.default.dissocPath=_curry2$$module$node_modules$ramda$dist$ramda(function dissocPath(path,obj){switch(path.length){case 0:return obj;case 1:return _isInteger$$module$node_modules$ramda$dist$ramda(path[0])?(0,module$node_modules$ramda$dist$ramda.default.remove)(path[0],1,obj):(0,module$node_modules$ramda$dist$ramda.default.dissoc)(path[0],obj);default:var head=path[0];var tail=Array.prototype.slice.call(path,1);if(obj[head]==null)return obj;else if(_isInteger$$module$node_modules$ramda$dist$ramda(path[0]))return(0,module$node_modules$ramda$dist$ramda.default.update)(head,
dissocPath(tail,obj[head]),obj);else return(0,module$node_modules$ramda$dist$ramda.default.assoc)(head,dissocPath(tail,obj[head]),obj)}});module$node_modules$ramda$dist$ramda.default.divide=_curry2$$module$node_modules$ramda$dist$ramda(function divide(a,b){return a/b});function XDrop$$module$node_modules$ramda$dist$ramda(n,xf){this.xf=xf;this.n=n}XDrop$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;
XDrop$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=_xfBase$$module$node_modules$ramda$dist$ramda.result;XDrop$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){if(this.n>0){this.n-=1;return result}return this.xf["@@transducer/step"](result,input)};var _xdrop$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xdrop(n,xf){return new XDrop$$module$node_modules$ramda$dist$ramda(n,xf)});
module$node_modules$ramda$dist$ramda.default.drop=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["drop"],_xdrop$$module$node_modules$ramda$dist$ramda,function drop(n,xs){return(0,module$node_modules$ramda$dist$ramda.default.slice)(Math.max(0,n),Infinity,xs)}));function XTake$$module$node_modules$ramda$dist$ramda(n,xf){this.xf=xf;this.n=n;this.i=0}XTake$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;
XTake$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=_xfBase$$module$node_modules$ramda$dist$ramda.result;XTake$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){this.i+=1;var ret=this.n===0?result:this.xf["@@transducer/step"](result,input);return this.n>=0&&this.i>=this.n?_reduced$$module$node_modules$ramda$dist$ramda(ret):ret};
var _xtake$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xtake(n,xf){return new XTake$$module$node_modules$ramda$dist$ramda(n,xf)});module$node_modules$ramda$dist$ramda.default.take=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["take"],_xtake$$module$node_modules$ramda$dist$ramda,function take(n,xs){return(0,module$node_modules$ramda$dist$ramda.default.slice)(0,n<0?Infinity:n,xs)}));
function dropLast$2$$module$node_modules$ramda$dist$ramda(n,xs){return(0,module$node_modules$ramda$dist$ramda.default.take)(n<xs.length?xs.length-n:0,xs)}function XDropLast$$module$node_modules$ramda$dist$ramda(n,xf){this.xf=xf;this.pos=0;this.full=false;this.acc=new Array(n)}XDropLast$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;
XDropLast$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(result){this.acc=null;return this.xf["@@transducer/result"](result)};XDropLast$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){if(this.full)result=this.xf["@@transducer/step"](result,this.acc[this.pos]);this.store(input);return result};
XDropLast$$module$node_modules$ramda$dist$ramda.prototype.store=function(input){this.acc[this.pos]=input;this.pos+=1;if(this.pos===this.acc.length){this.pos=0;this.full=true}};var _xdropLast$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xdropLast(n,xf){return new XDropLast$$module$node_modules$ramda$dist$ramda(n,xf)});
module$node_modules$ramda$dist$ramda.default.dropLast=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda([],_xdropLast$$module$node_modules$ramda$dist$ramda,dropLast$2$$module$node_modules$ramda$dist$ramda));function dropLastWhile$2$$module$node_modules$ramda$dist$ramda(pred,xs){var idx=xs.length-1;while(idx>=0&&pred(xs[idx]))idx-=1;return(0,module$node_modules$ramda$dist$ramda.default.slice)(0,idx+1,xs)}
function XDropLastWhile$$module$node_modules$ramda$dist$ramda(fn,xf){this.f=fn;this.retained=[];this.xf=xf}XDropLastWhile$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;XDropLastWhile$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(result){this.retained=null;return this.xf["@@transducer/result"](result)};
XDropLastWhile$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){return this.f(input)?this.retain(result,input):this.flush(result,input)};XDropLastWhile$$module$node_modules$ramda$dist$ramda.prototype.flush=function(result,input){result=_reduce$$module$node_modules$ramda$dist$ramda(this.xf["@@transducer/step"],result,this.retained);this.retained=[];return this.xf["@@transducer/step"](result,input)};
XDropLastWhile$$module$node_modules$ramda$dist$ramda.prototype.retain=function(result,input){this.retained.push(input);return result};var _xdropLastWhile$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xdropLastWhile(fn,xf){return new XDropLastWhile$$module$node_modules$ramda$dist$ramda(fn,xf)});
module$node_modules$ramda$dist$ramda.default.dropLastWhile=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda([],_xdropLastWhile$$module$node_modules$ramda$dist$ramda,dropLastWhile$2$$module$node_modules$ramda$dist$ramda));function XDropRepeatsWith$$module$node_modules$ramda$dist$ramda(pred,xf){this.xf=xf;this.pred=pred;this.lastValue=undefined;this.seenFirstValue=false}
XDropRepeatsWith$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;XDropRepeatsWith$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=_xfBase$$module$node_modules$ramda$dist$ramda.result;
XDropRepeatsWith$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){var sameAsLast=false;if(!this.seenFirstValue)this.seenFirstValue=true;else if(this.pred(this.lastValue,input))sameAsLast=true;this.lastValue=input;return sameAsLast?result:this.xf["@@transducer/step"](result,input)};
var _xdropRepeatsWith$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xdropRepeatsWith(pred,xf){return new XDropRepeatsWith$$module$node_modules$ramda$dist$ramda(pred,xf)});module$node_modules$ramda$dist$ramda.default.nth=_curry2$$module$node_modules$ramda$dist$ramda(function nth(offset,list){var idx=offset<0?list.length+offset:offset;return _isString$$module$node_modules$ramda$dist$ramda(list)?list.charAt(idx):list[idx]});
module$node_modules$ramda$dist$ramda.default.last=(0,module$node_modules$ramda$dist$ramda.default.nth)(-1);
module$node_modules$ramda$dist$ramda.default.dropRepeatsWith=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda([],_xdropRepeatsWith$$module$node_modules$ramda$dist$ramda,function dropRepeatsWith(pred,list){var result=[];var idx=1;var len=list.length;if(len!==0){result[0]=list[0];while(idx<len){if(!pred((0,module$node_modules$ramda$dist$ramda.default.last)(result),list[idx]))result[result.length]=list[idx];idx+=1}}return result}));
module$node_modules$ramda$dist$ramda.default.dropRepeats=_curry1$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda([],_xdropRepeatsWith$$module$node_modules$ramda$dist$ramda(module$node_modules$ramda$dist$ramda.default.equals),(0,module$node_modules$ramda$dist$ramda.default.dropRepeatsWith)(module$node_modules$ramda$dist$ramda.default.equals)));function XDropWhile$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f}
XDropWhile$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;XDropWhile$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=_xfBase$$module$node_modules$ramda$dist$ramda.result;XDropWhile$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){if(this.f){if(this.f(input))return result;this.f=null}return this.xf["@@transducer/step"](result,input)};
var _xdropWhile$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xdropWhile(f,xf){return new XDropWhile$$module$node_modules$ramda$dist$ramda(f,xf)});
module$node_modules$ramda$dist$ramda.default.dropWhile=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["dropWhile"],_xdropWhile$$module$node_modules$ramda$dist$ramda,function dropWhile(pred,xs){var idx=0;var len=xs.length;while(idx<len&&pred(xs[idx]))idx+=1;return(0,module$node_modules$ramda$dist$ramda.default.slice)(idx,Infinity,xs)}));
module$node_modules$ramda$dist$ramda.default.or=_curry2$$module$node_modules$ramda$dist$ramda(function or(a,b){return a||b});module$node_modules$ramda$dist$ramda.default.either=_curry2$$module$node_modules$ramda$dist$ramda(function either(f,g){return _isFunction$$module$node_modules$ramda$dist$ramda(f)?function _either(){return f.apply(this,arguments)||g.apply(this,arguments)}:(0,module$node_modules$ramda$dist$ramda.default.lift)(module$node_modules$ramda$dist$ramda.default.or)(f,g)});
module$node_modules$ramda$dist$ramda.default.empty=_curry1$$module$node_modules$ramda$dist$ramda(function empty(x){return x!=null&&typeof x["fantasy-land/empty"]==="function"?x["fantasy-land/empty"]():x!=null&&x.constructor!=null&&typeof x.constructor["fantasy-land/empty"]==="function"?x.constructor["fantasy-land/empty"]():x!=null&&typeof x.empty==="function"?x.empty():x!=null&&x.constructor!=null&&typeof x.constructor.empty==="function"?x.constructor.empty():_isArray$$module$node_modules$ramda$dist$ramda(x)?
[]:_isString$$module$node_modules$ramda$dist$ramda(x)?"":_isObject$$module$node_modules$ramda$dist$ramda(x)?{}:_isArguments$$module$node_modules$ramda$dist$ramda(x)?function(){return arguments}():void 0});module$node_modules$ramda$dist$ramda.default.takeLast=_curry2$$module$node_modules$ramda$dist$ramda(function takeLast(n,xs){return(0,module$node_modules$ramda$dist$ramda.default.drop)(n>=0?xs.length-n:0,xs)});
module$node_modules$ramda$dist$ramda.default.endsWith=_curry2$$module$node_modules$ramda$dist$ramda(function(suffix,list){return(0,module$node_modules$ramda$dist$ramda.default.equals)((0,module$node_modules$ramda$dist$ramda.default.takeLast)(suffix.length,list),suffix)});module$node_modules$ramda$dist$ramda.default.eqBy=_curry3$$module$node_modules$ramda$dist$ramda(function eqBy(f,x,y){return(0,module$node_modules$ramda$dist$ramda.default.equals)(f(x),f(y))});
module$node_modules$ramda$dist$ramda.default.eqProps=_curry3$$module$node_modules$ramda$dist$ramda(function eqProps(prop,obj1,obj2){return(0,module$node_modules$ramda$dist$ramda.default.equals)(obj1[prop],obj2[prop])});
module$node_modules$ramda$dist$ramda.default.evolve=_curry2$$module$node_modules$ramda$dist$ramda(function evolve(transformations,object){var result={};var transformation;var key;var type;for(key in object){transformation=transformations[key];type=typeof transformation;result[key]=type==="function"?transformation(object[key]):transformation&&type==="object"?evolve(transformation,object[key]):object[key]}return result});
function XFind$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f;this.found=false}XFind$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;XFind$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(result){if(!this.found)result=this.xf["@@transducer/step"](result,void 0);return this.xf["@@transducer/result"](result)};
XFind$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){if(this.f(input)){this.found=true;result=_reduced$$module$node_modules$ramda$dist$ramda(this.xf["@@transducer/step"](result,input))}return result};var _xfind$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xfind(f,xf){return new XFind$$module$node_modules$ramda$dist$ramda(f,xf)});
module$node_modules$ramda$dist$ramda.default.find=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["find"],_xfind$$module$node_modules$ramda$dist$ramda,function find(fn,list){var idx=0;var len=list.length;while(idx<len){if(fn(list[idx]))return list[idx];idx+=1}}));function XFindIndex$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f;this.idx=-1;this.found=false}
XFindIndex$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;XFindIndex$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(result){if(!this.found)result=this.xf["@@transducer/step"](result,-1);return this.xf["@@transducer/result"](result)};
XFindIndex$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){this.idx+=1;if(this.f(input)){this.found=true;result=_reduced$$module$node_modules$ramda$dist$ramda(this.xf["@@transducer/step"](result,this.idx))}return result};var _xfindIndex$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xfindIndex(f,xf){return new XFindIndex$$module$node_modules$ramda$dist$ramda(f,xf)});
module$node_modules$ramda$dist$ramda.default.findIndex=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda([],_xfindIndex$$module$node_modules$ramda$dist$ramda,function findIndex(fn,list){var idx=0;var len=list.length;while(idx<len){if(fn(list[idx]))return idx;idx+=1}return-1}));function XFindLast$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f}XFindLast$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;
XFindLast$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(result){return this.xf["@@transducer/result"](this.xf["@@transducer/step"](result,this.last))};XFindLast$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){if(this.f(input))this.last=input;return result};
var _xfindLast$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xfindLast(f,xf){return new XFindLast$$module$node_modules$ramda$dist$ramda(f,xf)});module$node_modules$ramda$dist$ramda.default.findLast=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda([],_xfindLast$$module$node_modules$ramda$dist$ramda,function findLast(fn,list){var idx=list.length-1;while(idx>=0){if(fn(list[idx]))return list[idx];idx-=1}}));
function XFindLastIndex$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f;this.idx=-1;this.lastIdx=-1}XFindLastIndex$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;XFindLastIndex$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=function(result){return this.xf["@@transducer/result"](this.xf["@@transducer/step"](result,this.lastIdx))};
XFindLastIndex$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){this.idx+=1;if(this.f(input))this.lastIdx=this.idx;return result};var _xfindLastIndex$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xfindLastIndex(f,xf){return new XFindLastIndex$$module$node_modules$ramda$dist$ramda(f,xf)});
module$node_modules$ramda$dist$ramda.default.findLastIndex=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda([],_xfindLastIndex$$module$node_modules$ramda$dist$ramda,function findLastIndex(fn,list){var idx=list.length-1;while(idx>=0){if(fn(list[idx]))return idx;idx-=1}return-1}));module$node_modules$ramda$dist$ramda.default.flatten=_curry1$$module$node_modules$ramda$dist$ramda(_makeFlat$$module$node_modules$ramda$dist$ramda(true));
module$node_modules$ramda$dist$ramda.default.flip=_curry1$$module$node_modules$ramda$dist$ramda(function flip(fn){return(0,module$node_modules$ramda$dist$ramda.default.curryN)(fn.length,function(a,b){var args=Array.prototype.slice.call(arguments,0);args[0]=b;args[1]=a;return fn.apply(this,args)})});
module$node_modules$ramda$dist$ramda.default.forEach=_curry2$$module$node_modules$ramda$dist$ramda(_checkForMethod$$module$node_modules$ramda$dist$ramda("forEach",function forEach(fn,list){var len=list.length;var idx=0;while(idx<len){fn(list[idx]);idx+=1}return list}));
module$node_modules$ramda$dist$ramda.default.forEachObjIndexed=_curry2$$module$node_modules$ramda$dist$ramda(function forEachObjIndexed(fn,obj){var keyList=(0,module$node_modules$ramda$dist$ramda.default.keys)(obj);var idx=0;while(idx<keyList.length){var key=keyList[idx];fn(obj[key],key,obj);idx+=1}return obj});
module$node_modules$ramda$dist$ramda.default.fromPairs=_curry1$$module$node_modules$ramda$dist$ramda(function fromPairs(pairs){var result={};var idx=0;while(idx<pairs.length){result[pairs[idx][0]]=pairs[idx][1];idx+=1}return result});
module$node_modules$ramda$dist$ramda.default.groupBy=_curry2$$module$node_modules$ramda$dist$ramda(_checkForMethod$$module$node_modules$ramda$dist$ramda("groupBy",(0,module$node_modules$ramda$dist$ramda.default.reduceBy)(function(acc,item){if(acc==null)acc=[];acc.push(item);return acc},null)));
module$node_modules$ramda$dist$ramda.default.groupWith=_curry2$$module$node_modules$ramda$dist$ramda(function(fn,list){var res=[];var idx=0;var len=list.length;while(idx<len){var nextidx=idx+1;while(nextidx<len&&fn(list[nextidx-1],list[nextidx]))nextidx+=1;res.push(list.slice(idx,nextidx));idx=nextidx}return res});module$node_modules$ramda$dist$ramda.default.gt=_curry2$$module$node_modules$ramda$dist$ramda(function gt(a,b){return a>b});
module$node_modules$ramda$dist$ramda.default.gte=_curry2$$module$node_modules$ramda$dist$ramda(function gte(a,b){return a>=b});module$node_modules$ramda$dist$ramda.default.has=_curry2$$module$node_modules$ramda$dist$ramda(_has$$module$node_modules$ramda$dist$ramda);module$node_modules$ramda$dist$ramda.default.hasIn=_curry2$$module$node_modules$ramda$dist$ramda(function hasIn(prop,obj){return prop in obj});module$node_modules$ramda$dist$ramda.default.head=(0,module$node_modules$ramda$dist$ramda.default.nth)(0);
function _identity$$module$node_modules$ramda$dist$ramda(x){return x}module$node_modules$ramda$dist$ramda.default.identity=_curry1$$module$node_modules$ramda$dist$ramda(_identity$$module$node_modules$ramda$dist$ramda);
module$node_modules$ramda$dist$ramda.default.ifElse=_curry3$$module$node_modules$ramda$dist$ramda(function ifElse(condition,onTrue,onFalse){return(0,module$node_modules$ramda$dist$ramda.default.curryN)(Math.max(condition.length,onTrue.length,onFalse.length),function _ifElse(){return condition.apply(this,arguments)?onTrue.apply(this,arguments):onFalse.apply(this,arguments)})});module$node_modules$ramda$dist$ramda.default.inc=(0,module$node_modules$ramda$dist$ramda.default.add)(1);
module$node_modules$ramda$dist$ramda.default.indexBy=(0,module$node_modules$ramda$dist$ramda.default.reduceBy)(function(acc,elem){return elem},null);module$node_modules$ramda$dist$ramda.default.indexOf=_curry2$$module$node_modules$ramda$dist$ramda(function indexOf(target,xs){return typeof xs.indexOf==="function"&&!_isArray$$module$node_modules$ramda$dist$ramda(xs)?xs.indexOf(target):_indexOf$$module$node_modules$ramda$dist$ramda(xs,target,0)});
module$node_modules$ramda$dist$ramda.default.init=(0,module$node_modules$ramda$dist$ramda.default.slice)(0,-1);module$node_modules$ramda$dist$ramda.default.innerJoin=_curry3$$module$node_modules$ramda$dist$ramda(function innerJoin(pred,xs,ys){return _filter$$module$node_modules$ramda$dist$ramda(function(x){return _containsWith$$module$node_modules$ramda$dist$ramda(pred,x,ys)},xs)});
module$node_modules$ramda$dist$ramda.default.insert=_curry3$$module$node_modules$ramda$dist$ramda(function insert(idx,elt,list){idx=idx<list.length&&idx>=0?idx:list.length;var result=Array.prototype.slice.call(list,0);result.splice(idx,0,elt);return result});
module$node_modules$ramda$dist$ramda.default.insertAll=_curry3$$module$node_modules$ramda$dist$ramda(function insertAll(idx,elts,list){idx=idx<list.length&&idx>=0?idx:list.length;return[].concat(Array.prototype.slice.call(list,0,idx),elts,Array.prototype.slice.call(list,idx))});function _Set$$module$node_modules$ramda$dist$ramda(){this._nativeSet=typeof Set==="function"?new Set:null;this._items={}}
_Set$$module$node_modules$ramda$dist$ramda.prototype.add=function(item){return!hasOrAdd$$module$node_modules$ramda$dist$ramda(item,true,this)};_Set$$module$node_modules$ramda$dist$ramda.prototype.has=function(item){return hasOrAdd$$module$node_modules$ramda$dist$ramda(item,false,this)};
function hasOrAdd$$module$node_modules$ramda$dist$ramda(item,shouldAdd,set){var type=typeof item;var prevSize;var newSize;switch(type){case "string":case "number":if(item===0&&1/item===-Infinity)if(set._items["-0"])return true;else{if(shouldAdd)set._items["-0"]=true;return false}if(set._nativeSet!==null)if(shouldAdd){prevSize=set._nativeSet.size;set._nativeSet.add(item);newSize=set._nativeSet.size;return newSize===prevSize}else return set._nativeSet.has(item);else if(!(type in set._items)){if(shouldAdd){set._items[type]=
{};set._items[type][item]=true}return false}else if(item in set._items[type])return true;else{if(shouldAdd)set._items[type][item]=true;return false}case "boolean":if(type in set._items){var bIdx=item?1:0;if(set._items[type][bIdx])return true;else{if(shouldAdd)set._items[type][bIdx]=true;return false}}else{if(shouldAdd)set._items[type]=item?[false,true]:[true,false];return false}case "function":if(set._nativeSet!==null)if(shouldAdd){prevSize=set._nativeSet.size;set._nativeSet.add(item);newSize=set._nativeSet.size;
return newSize===prevSize}else return set._nativeSet.has(item);else{if(!(type in set._items)){if(shouldAdd)set._items[type]=[item];return false}if(!_contains$$module$node_modules$ramda$dist$ramda(item,set._items[type])){if(shouldAdd)set._items[type].push(item);return false}return true}case "undefined":if(set._items[type])return true;else{if(shouldAdd)set._items[type]=true;return false}case "object":if(item===null){if(!set._items["null"]){if(shouldAdd)set._items["null"]=true;return false}return true}default:type=
Object.prototype.toString.call(item);if(!(type in set._items)){if(shouldAdd)set._items[type]=[item];return false}if(!_contains$$module$node_modules$ramda$dist$ramda(item,set._items[type])){if(shouldAdd)set._items[type].push(item);return false}return true}}
module$node_modules$ramda$dist$ramda.default.uniqBy=_curry2$$module$node_modules$ramda$dist$ramda(function uniqBy(fn,list){var set=new _Set$$module$node_modules$ramda$dist$ramda;var result=[];var idx=0;var appliedItem;var item;while(idx<list.length){item=list[idx];appliedItem=fn(item);if(set.add(appliedItem))result.push(item);idx+=1}return result});module$node_modules$ramda$dist$ramda.default.uniq=(0,module$node_modules$ramda$dist$ramda.default.uniqBy)(module$node_modules$ramda$dist$ramda.default.identity);
module$node_modules$ramda$dist$ramda.default.intersection=_curry2$$module$node_modules$ramda$dist$ramda(function intersection(list1,list2){var lookupList;var filteredList;if(list1.length>list2.length){lookupList=list1;filteredList=list2}else{lookupList=list2;filteredList=list1}return(0,module$node_modules$ramda$dist$ramda.default.uniq)(_filter$$module$node_modules$ramda$dist$ramda((0,module$node_modules$ramda$dist$ramda.default.flip)(_contains$$module$node_modules$ramda$dist$ramda)(lookupList),filteredList))});
module$node_modules$ramda$dist$ramda.default.intersperse=_curry2$$module$node_modules$ramda$dist$ramda(_checkForMethod$$module$node_modules$ramda$dist$ramda("intersperse",function intersperse(separator,list){var out=[];var idx=0;var length=list.length;while(idx<length){if(idx===length-1)out.push(list[idx]);else out.push(list[idx],separator);idx+=1}return out}));
function _objectAssign$$module$node_modules$ramda$dist$ramda(target){if(target==null)throw new TypeError("Cannot convert undefined or null to object");var output=Object(target);var idx=1;var length=arguments.length;while(idx<length){var source=arguments[idx];if(source!=null)for(var nextKey in source)if(_has$$module$node_modules$ramda$dist$ramda(nextKey,source))output[nextKey]=source[nextKey];idx+=1}return output}
var _assign$$module$node_modules$ramda$dist$ramda=typeof Object.assign==="function"?Object.assign:_objectAssign$$module$node_modules$ramda$dist$ramda;module$node_modules$ramda$dist$ramda.default.objOf=_curry2$$module$node_modules$ramda$dist$ramda(function objOf(key,val){var obj={};obj[key]=val;return obj});var _stepCatArray$$module$node_modules$ramda$dist$ramda={"@@transducer/init":Array,"@@transducer/step":function(xs,x){xs.push(x);return xs},"@@transducer/result":_identity$$module$node_modules$ramda$dist$ramda};
var _stepCatString$$module$node_modules$ramda$dist$ramda={"@@transducer/init":String,"@@transducer/step":function(a,b){return a+b},"@@transducer/result":_identity$$module$node_modules$ramda$dist$ramda};
var _stepCatObject$$module$node_modules$ramda$dist$ramda={"@@transducer/init":Object,"@@transducer/step":function(result,input){return _assign$$module$node_modules$ramda$dist$ramda(result,_isArrayLike$$module$node_modules$ramda$dist$ramda(input)?(0,module$node_modules$ramda$dist$ramda.default.objOf)(input[0],input[1]):input)},"@@transducer/result":_identity$$module$node_modules$ramda$dist$ramda};
function _stepCat$$module$node_modules$ramda$dist$ramda(obj){if(_isTransformer$$module$node_modules$ramda$dist$ramda(obj))return obj;if(_isArrayLike$$module$node_modules$ramda$dist$ramda(obj))return _stepCatArray$$module$node_modules$ramda$dist$ramda;if(typeof obj==="string")return _stepCatString$$module$node_modules$ramda$dist$ramda;if(typeof obj==="object")return _stepCatObject$$module$node_modules$ramda$dist$ramda;throw new Error("Cannot create transformer for "+obj);}
module$node_modules$ramda$dist$ramda.default.into=_curry3$$module$node_modules$ramda$dist$ramda(function into(acc,xf,list){return _isTransformer$$module$node_modules$ramda$dist$ramda(acc)?_reduce$$module$node_modules$ramda$dist$ramda(xf(acc),acc["@@transducer/init"](),list):_reduce$$module$node_modules$ramda$dist$ramda(xf(_stepCat$$module$node_modules$ramda$dist$ramda(acc)),_clone$$module$node_modules$ramda$dist$ramda(acc,[],[],false),list)});
module$node_modules$ramda$dist$ramda.default.invert=_curry1$$module$node_modules$ramda$dist$ramda(function invert(obj){var props=(0,module$node_modules$ramda$dist$ramda.default.keys)(obj);var len=props.length;var idx=0;var out={};while(idx<len){var key=props[idx];var val=obj[key];var list=_has$$module$node_modules$ramda$dist$ramda(val,out)?out[val]:out[val]=[];list[list.length]=key;idx+=1}return out});
module$node_modules$ramda$dist$ramda.default.invertObj=_curry1$$module$node_modules$ramda$dist$ramda(function invertObj(obj){var props=(0,module$node_modules$ramda$dist$ramda.default.keys)(obj);var len=props.length;var idx=0;var out={};while(idx<len){var key=props[idx];out[obj[key]]=key;idx+=1}return out});
module$node_modules$ramda$dist$ramda.default.invoker=_curry2$$module$node_modules$ramda$dist$ramda(function invoker(arity,method){return(0,module$node_modules$ramda$dist$ramda.default.curryN)(arity+1,function(){var target=arguments[arity];if(target!=null&&_isFunction$$module$node_modules$ramda$dist$ramda(target[method]))return target[method].apply(target,Array.prototype.slice.call(arguments,0,arity));throw new TypeError((0,module$node_modules$ramda$dist$ramda.default.toString)(target)+' does not have a method named "'+
method+'"');})});module$node_modules$ramda$dist$ramda.default.is=_curry2$$module$node_modules$ramda$dist$ramda(function is(Ctor,val){return val!=null&&val.constructor===Ctor||val instanceof Ctor});module$node_modules$ramda$dist$ramda.default.isEmpty=_curry1$$module$node_modules$ramda$dist$ramda(function isEmpty(x){return x!=null&&(0,module$node_modules$ramda$dist$ramda.default.equals)(x,(0,module$node_modules$ramda$dist$ramda.default.empty)(x))});
module$node_modules$ramda$dist$ramda.default.join=(0,module$node_modules$ramda$dist$ramda.default.invoker)(1,"join");module$node_modules$ramda$dist$ramda.default.juxt=_curry1$$module$node_modules$ramda$dist$ramda(function juxt(fns){return(0,module$node_modules$ramda$dist$ramda.default.converge)(function(){return Array.prototype.slice.call(arguments,0)},fns)});
module$node_modules$ramda$dist$ramda.default.keysIn=_curry1$$module$node_modules$ramda$dist$ramda(function keysIn(obj){var prop;var ks=[];for(prop in obj)ks[ks.length]=prop;return ks});
module$node_modules$ramda$dist$ramda.default.lastIndexOf=_curry2$$module$node_modules$ramda$dist$ramda(function lastIndexOf(target,xs){if(typeof xs.lastIndexOf==="function"&&!_isArray$$module$node_modules$ramda$dist$ramda(xs))return xs.lastIndexOf(target);else{var idx=xs.length-1;while(idx>=0){if((0,module$node_modules$ramda$dist$ramda.default.equals)(xs[idx],target))return idx;idx-=1}return-1}});
function _isNumber$$module$node_modules$ramda$dist$ramda(x){return Object.prototype.toString.call(x)==="[object Number]"}module$node_modules$ramda$dist$ramda.default.length=_curry1$$module$node_modules$ramda$dist$ramda(function length(list){return list!=null&&_isNumber$$module$node_modules$ramda$dist$ramda(list.length)?list.length:NaN});
module$node_modules$ramda$dist$ramda.default.lens=_curry2$$module$node_modules$ramda$dist$ramda(function lens(getter,setter){return function(toFunctorFn){return function(target){return(0,module$node_modules$ramda$dist$ramda.default.map)(function(focus){return setter(focus,target)},toFunctorFn(getter(target)))}}});
module$node_modules$ramda$dist$ramda.default.lensIndex=_curry1$$module$node_modules$ramda$dist$ramda(function lensIndex(n){return(0,module$node_modules$ramda$dist$ramda.default.lens)((0,module$node_modules$ramda$dist$ramda.default.nth)(n),(0,module$node_modules$ramda$dist$ramda.default.update)(n))});
module$node_modules$ramda$dist$ramda.default.lensPath=_curry1$$module$node_modules$ramda$dist$ramda(function lensPath(p){return(0,module$node_modules$ramda$dist$ramda.default.lens)((0,module$node_modules$ramda$dist$ramda.default.path)(p),(0,module$node_modules$ramda$dist$ramda.default.assocPath)(p))});
module$node_modules$ramda$dist$ramda.default.lensProp=_curry1$$module$node_modules$ramda$dist$ramda(function lensProp(k){return(0,module$node_modules$ramda$dist$ramda.default.lens)((0,module$node_modules$ramda$dist$ramda.default.prop)(k),(0,module$node_modules$ramda$dist$ramda.default.assoc)(k))});module$node_modules$ramda$dist$ramda.default.lt=_curry2$$module$node_modules$ramda$dist$ramda(function lt(a,b){return a<b});
module$node_modules$ramda$dist$ramda.default.lte=_curry2$$module$node_modules$ramda$dist$ramda(function lte(a,b){return a<=b});module$node_modules$ramda$dist$ramda.default.mapAccum=_curry3$$module$node_modules$ramda$dist$ramda(function mapAccum(fn,acc,list){var idx=0;var len=list.length;var result=[];var tuple=[acc];while(idx<len){tuple=fn(tuple[0],list[idx]);result[idx]=tuple[1];idx+=1}return[tuple[0],result]});
module$node_modules$ramda$dist$ramda.default.mapAccumRight=_curry3$$module$node_modules$ramda$dist$ramda(function mapAccumRight(fn,acc,list){var idx=list.length-1;var result=[];var tuple=[acc];while(idx>=0){tuple=fn(list[idx],tuple[0]);result[idx]=tuple[1];idx-=1}return[result,tuple[0]]});
module$node_modules$ramda$dist$ramda.default.mapObjIndexed=_curry2$$module$node_modules$ramda$dist$ramda(function mapObjIndexed(fn,obj){return _reduce$$module$node_modules$ramda$dist$ramda(function(acc,key){acc[key]=fn(obj[key],key,obj);return acc},{},(0,module$node_modules$ramda$dist$ramda.default.keys)(obj))});module$node_modules$ramda$dist$ramda.default.match=_curry2$$module$node_modules$ramda$dist$ramda(function match(rx,str){return str.match(rx)||[]});
module$node_modules$ramda$dist$ramda.default.mathMod=_curry2$$module$node_modules$ramda$dist$ramda(function mathMod(m,p){if(!_isInteger$$module$node_modules$ramda$dist$ramda(m))return NaN;if(!_isInteger$$module$node_modules$ramda$dist$ramda(p)||p<1)return NaN;return(m%p+p)%p});module$node_modules$ramda$dist$ramda.default.maxBy=_curry3$$module$node_modules$ramda$dist$ramda(function maxBy(f,a,b){return f(b)>f(a)?b:a});
module$node_modules$ramda$dist$ramda.default.sum=(0,module$node_modules$ramda$dist$ramda.default.reduce)(module$node_modules$ramda$dist$ramda.default.add,0);module$node_modules$ramda$dist$ramda.default.mean=_curry1$$module$node_modules$ramda$dist$ramda(function mean(list){return(0,module$node_modules$ramda$dist$ramda.default.sum)(list)/list.length});
module$node_modules$ramda$dist$ramda.default.median=_curry1$$module$node_modules$ramda$dist$ramda(function median(list){var len=list.length;if(len===0)return NaN;var width=2-len%2;var idx=(len-width)/2;return(0,module$node_modules$ramda$dist$ramda.default.mean)(Array.prototype.slice.call(list,0).sort(function(a,b){return a<b?-1:a>b?1:0}).slice(idx,idx+width))});
module$node_modules$ramda$dist$ramda.default.memoizeWith=_curry2$$module$node_modules$ramda$dist$ramda(function memoizeWith(mFn,fn){var cache={};return _arity$$module$node_modules$ramda$dist$ramda(fn.length,function(){var key=mFn.apply(this,arguments);if(!_has$$module$node_modules$ramda$dist$ramda(key,cache))cache[key]=fn.apply(this,arguments);return cache[key]})});module$node_modules$ramda$dist$ramda.default.memoize=(0,module$node_modules$ramda$dist$ramda.default.memoizeWith)(function(){return(0,module$node_modules$ramda$dist$ramda.default.toString)(arguments)});
module$node_modules$ramda$dist$ramda.default.merge=_curry2$$module$node_modules$ramda$dist$ramda(function merge(l,r){return _assign$$module$node_modules$ramda$dist$ramda({},l,r)});module$node_modules$ramda$dist$ramda.default.mergeAll=_curry1$$module$node_modules$ramda$dist$ramda(function mergeAll(list){return _assign$$module$node_modules$ramda$dist$ramda.apply(null,[{}].concat(list))});
module$node_modules$ramda$dist$ramda.default.mergeWithKey=_curry3$$module$node_modules$ramda$dist$ramda(function mergeWithKey(fn,l,r){var result={};var k;for(k in l)if(_has$$module$node_modules$ramda$dist$ramda(k,l))result[k]=_has$$module$node_modules$ramda$dist$ramda(k,r)?fn(k,l[k],r[k]):l[k];for(k in r)if(_has$$module$node_modules$ramda$dist$ramda(k,r)&&!_has$$module$node_modules$ramda$dist$ramda(k,result))result[k]=r[k];return result});
module$node_modules$ramda$dist$ramda.default.mergeDeepWithKey=_curry3$$module$node_modules$ramda$dist$ramda(function mergeDeepWithKey(fn,lObj,rObj){return(0,module$node_modules$ramda$dist$ramda.default.mergeWithKey)(function(k,lVal,rVal){if(_isObject$$module$node_modules$ramda$dist$ramda(lVal)&&_isObject$$module$node_modules$ramda$dist$ramda(rVal))return mergeDeepWithKey(fn,lVal,rVal);else return fn(k,lVal,rVal)},lObj,rObj)});
module$node_modules$ramda$dist$ramda.default.mergeDeepLeft=_curry2$$module$node_modules$ramda$dist$ramda(function mergeDeepLeft(lObj,rObj){return(0,module$node_modules$ramda$dist$ramda.default.mergeDeepWithKey)(function(k,lVal,rVal){return lVal},lObj,rObj)});
module$node_modules$ramda$dist$ramda.default.mergeDeepRight=_curry2$$module$node_modules$ramda$dist$ramda(function mergeDeepRight(lObj,rObj){return(0,module$node_modules$ramda$dist$ramda.default.mergeDeepWithKey)(function(k,lVal,rVal){return rVal},lObj,rObj)});
module$node_modules$ramda$dist$ramda.default.mergeDeepWith=_curry3$$module$node_modules$ramda$dist$ramda(function mergeDeepWith(fn,lObj,rObj){return(0,module$node_modules$ramda$dist$ramda.default.mergeDeepWithKey)(function(k,lVal,rVal){return fn(lVal,rVal)},lObj,rObj)});
module$node_modules$ramda$dist$ramda.default.mergeWith=_curry3$$module$node_modules$ramda$dist$ramda(function mergeWith(fn,l,r){return(0,module$node_modules$ramda$dist$ramda.default.mergeWithKey)(function(_,_l,_r){return fn(_l,_r)},l,r)});module$node_modules$ramda$dist$ramda.default.min=_curry2$$module$node_modules$ramda$dist$ramda(function min(a,b){return b<a?b:a});
module$node_modules$ramda$dist$ramda.default.minBy=_curry3$$module$node_modules$ramda$dist$ramda(function minBy(f,a,b){return f(b)<f(a)?b:a});module$node_modules$ramda$dist$ramda.default.modulo=_curry2$$module$node_modules$ramda$dist$ramda(function modulo(a,b){return a%b});module$node_modules$ramda$dist$ramda.default.multiply=_curry2$$module$node_modules$ramda$dist$ramda(function multiply(a,b){return a*b});module$node_modules$ramda$dist$ramda.default.negate=_curry1$$module$node_modules$ramda$dist$ramda(function negate(n){return-n});
module$node_modules$ramda$dist$ramda.default.none=_curry2$$module$node_modules$ramda$dist$ramda(_complement$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["any"],_xany$$module$node_modules$ramda$dist$ramda,module$node_modules$ramda$dist$ramda.default.any)));
module$node_modules$ramda$dist$ramda.default.nthArg=_curry1$$module$node_modules$ramda$dist$ramda(function nthArg(n){var arity=n<0?1:n+1;return(0,module$node_modules$ramda$dist$ramda.default.curryN)(arity,function(){return(0,module$node_modules$ramda$dist$ramda.default.nth)(n,arguments)})});module$node_modules$ramda$dist$ramda.default.o=_curry3$$module$node_modules$ramda$dist$ramda(function o(f,g,x){return f(g(x))});function _of$$module$node_modules$ramda$dist$ramda(x){return[x]}
module$node_modules$ramda$dist$ramda.default.of=_curry1$$module$node_modules$ramda$dist$ramda(_of$$module$node_modules$ramda$dist$ramda);module$node_modules$ramda$dist$ramda.default.omit=_curry2$$module$node_modules$ramda$dist$ramda(function omit(names,obj){var result={};var index={};var idx=0;var len=names.length;while(idx<len){index[names[idx]]=1;idx+=1}for(var prop in obj)if(!index.hasOwnProperty(prop))result[prop]=obj[prop];return result});
module$node_modules$ramda$dist$ramda.default.once=_curry1$$module$node_modules$ramda$dist$ramda(function once(fn){var called=false;var result;return _arity$$module$node_modules$ramda$dist$ramda(fn.length,function(){if(called)return result;called=true;result=fn.apply(this,arguments);return result})});var Identity$$module$node_modules$ramda$dist$ramda=function(x){return{value:x,map:function(f){return Identity$$module$node_modules$ramda$dist$ramda(f(x))}}};
module$node_modules$ramda$dist$ramda.default.over=_curry3$$module$node_modules$ramda$dist$ramda(function over(lens,f,x){return lens(function(y){return Identity$$module$node_modules$ramda$dist$ramda(f(y))})(x).value});module$node_modules$ramda$dist$ramda.default.pair=_curry2$$module$node_modules$ramda$dist$ramda(function pair(fst,snd){return[fst,snd]});
function _createPartialApplicator$$module$node_modules$ramda$dist$ramda(concat){return _curry2$$module$node_modules$ramda$dist$ramda(function(fn,args){return _arity$$module$node_modules$ramda$dist$ramda(Math.max(0,fn.length-args.length),function(){return fn.apply(this,concat(args,arguments))})})}module$node_modules$ramda$dist$ramda.default.partial=_createPartialApplicator$$module$node_modules$ramda$dist$ramda(_concat$$module$node_modules$ramda$dist$ramda);
module$node_modules$ramda$dist$ramda.default.partialRight=_createPartialApplicator$$module$node_modules$ramda$dist$ramda((0,module$node_modules$ramda$dist$ramda.default.flip)(_concat$$module$node_modules$ramda$dist$ramda));module$node_modules$ramda$dist$ramda.default.partition=(0,module$node_modules$ramda$dist$ramda.default.juxt)([module$node_modules$ramda$dist$ramda.default.filter,module$node_modules$ramda$dist$ramda.default.reject]);
module$node_modules$ramda$dist$ramda.default.pathEq=_curry3$$module$node_modules$ramda$dist$ramda(function pathEq(_path,val,obj){return(0,module$node_modules$ramda$dist$ramda.default.equals)((0,module$node_modules$ramda$dist$ramda.default.path)(_path,obj),val)});
module$node_modules$ramda$dist$ramda.default.pathOr=_curry3$$module$node_modules$ramda$dist$ramda(function pathOr(d,p,obj){return(0,module$node_modules$ramda$dist$ramda.default.defaultTo)(d,(0,module$node_modules$ramda$dist$ramda.default.path)(p,obj))});module$node_modules$ramda$dist$ramda.default.pathSatisfies=_curry3$$module$node_modules$ramda$dist$ramda(function pathSatisfies(pred,propPath,obj){return propPath.length>0&&pred((0,module$node_modules$ramda$dist$ramda.default.path)(propPath,obj))});
module$node_modules$ramda$dist$ramda.default.pick=_curry2$$module$node_modules$ramda$dist$ramda(function pick(names,obj){var result={};var idx=0;while(idx<names.length){if(names[idx]in obj)result[names[idx]]=obj[names[idx]];idx+=1}return result});module$node_modules$ramda$dist$ramda.default.pickAll=_curry2$$module$node_modules$ramda$dist$ramda(function pickAll(names,obj){var result={};var idx=0;var len=names.length;while(idx<len){var name=names[idx];result[name]=obj[name];idx+=1}return result});
module$node_modules$ramda$dist$ramda.default.pickBy=_curry2$$module$node_modules$ramda$dist$ramda(function pickBy(test,obj){var result={};for(var prop in obj)if(test(obj[prop],prop,obj))result[prop]=obj[prop];return result});module$node_modules$ramda$dist$ramda.default.prepend=_curry2$$module$node_modules$ramda$dist$ramda(function prepend(el,list){return _concat$$module$node_modules$ramda$dist$ramda([el],list)});
module$node_modules$ramda$dist$ramda.default.product=(0,module$node_modules$ramda$dist$ramda.default.reduce)(module$node_modules$ramda$dist$ramda.default.multiply,1);
module$node_modules$ramda$dist$ramda.default.useWith=_curry2$$module$node_modules$ramda$dist$ramda(function useWith(fn,transformers){return(0,module$node_modules$ramda$dist$ramda.default.curryN)(transformers.length,function(){var args=[];var idx=0;while(idx<transformers.length){args.push(transformers[idx].call(this,arguments[idx]));idx+=1}return fn.apply(this,args.concat(Array.prototype.slice.call(arguments,transformers.length)))})});
module$node_modules$ramda$dist$ramda.default.project=(0,module$node_modules$ramda$dist$ramda.default.useWith)(_map$$module$node_modules$ramda$dist$ramda,[module$node_modules$ramda$dist$ramda.default.pickAll,module$node_modules$ramda$dist$ramda.default.identity]);module$node_modules$ramda$dist$ramda.default.propEq=_curry3$$module$node_modules$ramda$dist$ramda(function propEq(name,val,obj){return(0,module$node_modules$ramda$dist$ramda.default.equals)(val,obj[name])});
module$node_modules$ramda$dist$ramda.default.propIs=_curry3$$module$node_modules$ramda$dist$ramda(function propIs(type,name,obj){return(0,module$node_modules$ramda$dist$ramda.default.is)(type,obj[name])});module$node_modules$ramda$dist$ramda.default.propOr=_curry3$$module$node_modules$ramda$dist$ramda(function propOr(val,p,obj){return obj!=null&&_has$$module$node_modules$ramda$dist$ramda(p,obj)?obj[p]:val});
module$node_modules$ramda$dist$ramda.default.propSatisfies=_curry3$$module$node_modules$ramda$dist$ramda(function propSatisfies(pred,name,obj){return pred(obj[name])});module$node_modules$ramda$dist$ramda.default.props=_curry2$$module$node_modules$ramda$dist$ramda(function props(ps,obj){var len=ps.length;var out=[];var idx=0;while(idx<len){out[idx]=obj[ps[idx]];idx+=1}return out});
module$node_modules$ramda$dist$ramda.default.range=_curry2$$module$node_modules$ramda$dist$ramda(function range(from,to){if(!(_isNumber$$module$node_modules$ramda$dist$ramda(from)&&_isNumber$$module$node_modules$ramda$dist$ramda(to)))throw new TypeError("Both arguments to range must be numbers");var result=[];var n=from;while(n<to){result.push(n);n+=1}return result});
module$node_modules$ramda$dist$ramda.default.reduceRight=_curry3$$module$node_modules$ramda$dist$ramda(function reduceRight(fn,acc,list){var idx=list.length-1;while(idx>=0){acc=fn(list[idx],acc);idx-=1}return acc});
module$node_modules$ramda$dist$ramda.default.reduceWhile=_curryN$$module$node_modules$ramda$dist$ramda(4,[],function _reduceWhile(pred,fn,a,list){return _reduce$$module$node_modules$ramda$dist$ramda(function(acc,x){return pred(acc,x)?fn(acc,x):_reduced$$module$node_modules$ramda$dist$ramda(acc)},a,list)});module$node_modules$ramda$dist$ramda.default.reduced=_curry1$$module$node_modules$ramda$dist$ramda(_reduced$$module$node_modules$ramda$dist$ramda);
module$node_modules$ramda$dist$ramda.default.times=_curry2$$module$node_modules$ramda$dist$ramda(function times(fn,n){var len=Number(n);var idx=0;var list;if(len<0||isNaN(len))throw new RangeError("n must be a non-negative number");list=new Array(len);while(idx<len){list[idx]=fn(idx);idx+=1}return list});
module$node_modules$ramda$dist$ramda.default.repeat=_curry2$$module$node_modules$ramda$dist$ramda(function repeat(value,n){return(0,module$node_modules$ramda$dist$ramda.default.times)((0,module$node_modules$ramda$dist$ramda.default.always)(value),n)});module$node_modules$ramda$dist$ramda.default.replace=_curry3$$module$node_modules$ramda$dist$ramda(function replace(regex,replacement,str){return str.replace(regex,replacement)});
module$node_modules$ramda$dist$ramda.default.scan=_curry3$$module$node_modules$ramda$dist$ramda(function scan(fn,acc,list){var idx=0;var len=list.length;var result=[acc];while(idx<len){acc=fn(acc,list[idx]);result[idx+1]=acc;idx+=1}return result});
module$node_modules$ramda$dist$ramda.default.sequence=_curry2$$module$node_modules$ramda$dist$ramda(function sequence(of,traversable){return typeof traversable.sequence==="function"?traversable.sequence(of):(0,module$node_modules$ramda$dist$ramda.default.reduceRight)(function(x,acc){return(0,module$node_modules$ramda$dist$ramda.default.ap)((0,module$node_modules$ramda$dist$ramda.default.map)(module$node_modules$ramda$dist$ramda.default.prepend,x),acc)},of([]),traversable)});
module$node_modules$ramda$dist$ramda.default.set=_curry3$$module$node_modules$ramda$dist$ramda(function set(lens,v,x){return(0,module$node_modules$ramda$dist$ramda.default.over)(lens,(0,module$node_modules$ramda$dist$ramda.default.always)(v),x)});module$node_modules$ramda$dist$ramda.default.sort=_curry2$$module$node_modules$ramda$dist$ramda(function sort(comparator,list){return Array.prototype.slice.call(list,0).sort(comparator)});
module$node_modules$ramda$dist$ramda.default.sortBy=_curry2$$module$node_modules$ramda$dist$ramda(function sortBy(fn,list){return Array.prototype.slice.call(list,0).sort(function(a,b){var aa=fn(a);var bb=fn(b);return aa<bb?-1:aa>bb?1:0})});
module$node_modules$ramda$dist$ramda.default.sortWith=_curry2$$module$node_modules$ramda$dist$ramda(function sortWith(fns,list){return Array.prototype.slice.call(list,0).sort(function(a,b){var result=0;var i=0;while(result===0&&i<fns.length){result=fns[i](a,b);i+=1}return result})});module$node_modules$ramda$dist$ramda.default.split=(0,module$node_modules$ramda$dist$ramda.default.invoker)(1,"split");
module$node_modules$ramda$dist$ramda.default.splitAt=_curry2$$module$node_modules$ramda$dist$ramda(function splitAt(index,array){return[(0,module$node_modules$ramda$dist$ramda.default.slice)(0,index,array),(0,module$node_modules$ramda$dist$ramda.default.slice)(index,(0,module$node_modules$ramda$dist$ramda.default.length)(array),array)]});
module$node_modules$ramda$dist$ramda.default.splitEvery=_curry2$$module$node_modules$ramda$dist$ramda(function splitEvery(n,list){if(n<=0)throw new Error("First argument to splitEvery must be a positive integer");var result=[];var idx=0;while(idx<list.length)result.push((0,module$node_modules$ramda$dist$ramda.default.slice)(idx,idx+=n,list));return result});
module$node_modules$ramda$dist$ramda.default.splitWhen=_curry2$$module$node_modules$ramda$dist$ramda(function splitWhen(pred,list){var idx=0;var len=list.length;var prefix=[];while(idx<len&&!pred(list[idx])){prefix.push(list[idx]);idx+=1}return[prefix,Array.prototype.slice.call(list,idx)]});
module$node_modules$ramda$dist$ramda.default.startsWith=_curry2$$module$node_modules$ramda$dist$ramda(function(prefix,list){return(0,module$node_modules$ramda$dist$ramda.default.equals)((0,module$node_modules$ramda$dist$ramda.default.take)(prefix.length,list),prefix)});module$node_modules$ramda$dist$ramda.default.subtract=_curry2$$module$node_modules$ramda$dist$ramda(function subtract(a,b){return Number(a)-Number(b)});
module$node_modules$ramda$dist$ramda.default.symmetricDifference=_curry2$$module$node_modules$ramda$dist$ramda(function symmetricDifference(list1,list2){return(0,module$node_modules$ramda$dist$ramda.default.concat)((0,module$node_modules$ramda$dist$ramda.default.difference)(list1,list2),(0,module$node_modules$ramda$dist$ramda.default.difference)(list2,list1))});
module$node_modules$ramda$dist$ramda.default.symmetricDifferenceWith=_curry3$$module$node_modules$ramda$dist$ramda(function symmetricDifferenceWith(pred,list1,list2){return(0,module$node_modules$ramda$dist$ramda.default.concat)((0,module$node_modules$ramda$dist$ramda.default.differenceWith)(pred,list1,list2),(0,module$node_modules$ramda$dist$ramda.default.differenceWith)(pred,list2,list1))});
module$node_modules$ramda$dist$ramda.default.takeLastWhile=_curry2$$module$node_modules$ramda$dist$ramda(function takeLastWhile(fn,xs){var idx=xs.length-1;while(idx>=0&&fn(xs[idx]))idx-=1;return(0,module$node_modules$ramda$dist$ramda.default.slice)(idx+1,Infinity,xs)});function XTakeWhile$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f}XTakeWhile$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;
XTakeWhile$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=_xfBase$$module$node_modules$ramda$dist$ramda.result;XTakeWhile$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){return this.f(input)?this.xf["@@transducer/step"](result,input):_reduced$$module$node_modules$ramda$dist$ramda(result)};
var _xtakeWhile$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xtakeWhile(f,xf){return new XTakeWhile$$module$node_modules$ramda$dist$ramda(f,xf)});
module$node_modules$ramda$dist$ramda.default.takeWhile=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda(["takeWhile"],_xtakeWhile$$module$node_modules$ramda$dist$ramda,function takeWhile(fn,xs){var idx=0;var len=xs.length;while(idx<len&&fn(xs[idx]))idx+=1;return(0,module$node_modules$ramda$dist$ramda.default.slice)(0,idx,xs)}));function XTap$$module$node_modules$ramda$dist$ramda(f,xf){this.xf=xf;this.f=f}
XTap$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/init"]=_xfBase$$module$node_modules$ramda$dist$ramda.init;XTap$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/result"]=_xfBase$$module$node_modules$ramda$dist$ramda.result;XTap$$module$node_modules$ramda$dist$ramda.prototype["@@transducer/step"]=function(result,input){this.f(input);return this.xf["@@transducer/step"](result,input)};
var _xtap$$module$node_modules$ramda$dist$ramda=_curry2$$module$node_modules$ramda$dist$ramda(function _xtap(f,xf){return new XTap$$module$node_modules$ramda$dist$ramda(f,xf)});module$node_modules$ramda$dist$ramda.default.tap=_curry2$$module$node_modules$ramda$dist$ramda(_dispatchable$$module$node_modules$ramda$dist$ramda([],_xtap$$module$node_modules$ramda$dist$ramda,function tap(fn,x){fn(x);return x}));
function _isRegExp$$module$node_modules$ramda$dist$ramda(x){return Object.prototype.toString.call(x)==="[object RegExp]"}module$node_modules$ramda$dist$ramda.default.test=_curry2$$module$node_modules$ramda$dist$ramda(function test(pattern,str){if(!_isRegExp$$module$node_modules$ramda$dist$ramda(pattern))throw new TypeError("‘test’ requires a value of type RegExp as its first argument; received "+(0,module$node_modules$ramda$dist$ramda.default.toString)(pattern));return _cloneRegExp$$module$node_modules$ramda$dist$ramda(pattern).test(str)});
module$node_modules$ramda$dist$ramda.default.toLower=(0,module$node_modules$ramda$dist$ramda.default.invoker)(0,"toLowerCase");module$node_modules$ramda$dist$ramda.default.toPairs=_curry1$$module$node_modules$ramda$dist$ramda(function toPairs(obj){var pairs=[];for(var prop in obj)if(_has$$module$node_modules$ramda$dist$ramda(prop,obj))pairs[pairs.length]=[prop,obj[prop]];return pairs});
module$node_modules$ramda$dist$ramda.default.toPairsIn=_curry1$$module$node_modules$ramda$dist$ramda(function toPairsIn(obj){var pairs=[];for(var prop in obj)pairs[pairs.length]=[prop,obj[prop]];return pairs});module$node_modules$ramda$dist$ramda.default.toUpper=(0,module$node_modules$ramda$dist$ramda.default.invoker)(0,"toUpperCase");
module$node_modules$ramda$dist$ramda.default.transduce=(0,module$node_modules$ramda$dist$ramda.default.curryN)(4,function transduce(xf,fn,acc,list){return _reduce$$module$node_modules$ramda$dist$ramda(xf(typeof fn==="function"?_xwrap$$module$node_modules$ramda$dist$ramda(fn):fn),acc,list)});
module$node_modules$ramda$dist$ramda.default.transpose=_curry1$$module$node_modules$ramda$dist$ramda(function transpose(outerlist){var i=0;var result=[];while(i<outerlist.length){var innerlist=outerlist[i];var j=0;while(j<innerlist.length){if(typeof result[j]==="undefined")result[j]=[];result[j].push(innerlist[j]);j+=1}i+=1}return result});
module$node_modules$ramda$dist$ramda.default.traverse=_curry3$$module$node_modules$ramda$dist$ramda(function traverse(of,f,traversable){return typeof traversable["fantasy-land/traverse"]==="function"?traversable["fantasy-land/traverse"](f,of):(0,module$node_modules$ramda$dist$ramda.default.sequence)(of,(0,module$node_modules$ramda$dist$ramda.default.map)(f,traversable))});var ws$$module$node_modules$ramda$dist$ramda="\t\n\x0B\f\r   ᠎    "+"         　\u2028"+"\u2029﻿";
var zeroWidth$$module$node_modules$ramda$dist$ramda="​";var hasProtoTrim$$module$node_modules$ramda$dist$ramda=typeof String.prototype.trim==="function";
var _trim$$module$node_modules$ramda$dist$ramda=!hasProtoTrim$$module$node_modules$ramda$dist$ramda||(ws$$module$node_modules$ramda$dist$ramda.trim()||!zeroWidth$$module$node_modules$ramda$dist$ramda.trim())?function trim(str){var beginRx=new RegExp("^["+ws$$module$node_modules$ramda$dist$ramda+"]["+ws$$module$node_modules$ramda$dist$ramda+"]*");var endRx=new RegExp("["+ws$$module$node_modules$ramda$dist$ramda+"]["+ws$$module$node_modules$ramda$dist$ramda+"]*$");return str.replace(beginRx,"").replace(endRx,
"")}:function trim(str){return str.trim()};module$node_modules$ramda$dist$ramda.default.trim=_curry1$$module$node_modules$ramda$dist$ramda(_trim$$module$node_modules$ramda$dist$ramda);
module$node_modules$ramda$dist$ramda.default.tryCatch=_curry2$$module$node_modules$ramda$dist$ramda(function _tryCatch(tryer,catcher){return _arity$$module$node_modules$ramda$dist$ramda(tryer.length,function(){try{return tryer.apply(this,arguments)}catch(e){return catcher.apply(this,_concat$$module$node_modules$ramda$dist$ramda([e],arguments))}})});
module$node_modules$ramda$dist$ramda.default.unapply=_curry1$$module$node_modules$ramda$dist$ramda(function unapply(fn){return function(){return fn(Array.prototype.slice.call(arguments,0))}});module$node_modules$ramda$dist$ramda.default.unary=_curry1$$module$node_modules$ramda$dist$ramda(function unary(fn){return(0,module$node_modules$ramda$dist$ramda.default.nAry)(1,fn)});
module$node_modules$ramda$dist$ramda.default.uncurryN=_curry2$$module$node_modules$ramda$dist$ramda(function uncurryN(depth,fn){return(0,module$node_modules$ramda$dist$ramda.default.curryN)(depth,function(){var currentDepth=1;var value=fn;var idx=0;var endIdx;while(currentDepth<=depth&&typeof value==="function"){endIdx=currentDepth===depth?arguments.length:idx+value.length;value=value.apply(this,Array.prototype.slice.call(arguments,idx,endIdx));currentDepth+=1;idx=endIdx}return value})});
module$node_modules$ramda$dist$ramda.default.unfold=_curry2$$module$node_modules$ramda$dist$ramda(function unfold(fn,seed){var pair=fn(seed);var result=[];while(pair&&pair.length){result[result.length]=pair[0];pair=fn(pair[1])}return result});module$node_modules$ramda$dist$ramda.default.union=_curry2$$module$node_modules$ramda$dist$ramda((0,module$node_modules$ramda$dist$ramda.default.compose)(module$node_modules$ramda$dist$ramda.default.uniq,_concat$$module$node_modules$ramda$dist$ramda));
module$node_modules$ramda$dist$ramda.default.uniqWith=_curry2$$module$node_modules$ramda$dist$ramda(function uniqWith(pred,list){var idx=0;var len=list.length;var result=[];var item;while(idx<len){item=list[idx];if(!_containsWith$$module$node_modules$ramda$dist$ramda(pred,item,result))result[result.length]=item;idx+=1}return result});
module$node_modules$ramda$dist$ramda.default.unionWith=_curry3$$module$node_modules$ramda$dist$ramda(function unionWith(pred,list1,list2){return(0,module$node_modules$ramda$dist$ramda.default.uniqWith)(pred,_concat$$module$node_modules$ramda$dist$ramda(list1,list2))});module$node_modules$ramda$dist$ramda.default.unless=_curry3$$module$node_modules$ramda$dist$ramda(function unless(pred,whenFalseFn,x){return pred(x)?x:whenFalseFn(x)});module$node_modules$ramda$dist$ramda.default.unnest=(0,module$node_modules$ramda$dist$ramda.default.chain)(_identity$$module$node_modules$ramda$dist$ramda);
module$node_modules$ramda$dist$ramda.default.until=_curry3$$module$node_modules$ramda$dist$ramda(function until(pred,fn,init){var val=init;while(!pred(val))val=fn(val);return val});module$node_modules$ramda$dist$ramda.default.valuesIn=_curry1$$module$node_modules$ramda$dist$ramda(function valuesIn(obj){var prop;var vs=[];for(prop in obj)vs[vs.length]=obj[prop];return vs});var Const$$module$node_modules$ramda$dist$ramda=function(x){return{value:x,"fantasy-land/map":function(){return this}}};
module$node_modules$ramda$dist$ramda.default.view=_curry2$$module$node_modules$ramda$dist$ramda(function view(lens,x){return lens(Const$$module$node_modules$ramda$dist$ramda)(x).value});module$node_modules$ramda$dist$ramda.default.when=_curry3$$module$node_modules$ramda$dist$ramda(function when(pred,whenTrueFn,x){return pred(x)?whenTrueFn(x):x});
module$node_modules$ramda$dist$ramda.default.where=_curry2$$module$node_modules$ramda$dist$ramda(function where(spec,testObj){for(var prop in spec)if(_has$$module$node_modules$ramda$dist$ramda(prop,spec)&&!spec[prop](testObj[prop]))return false;return true});
module$node_modules$ramda$dist$ramda.default.whereEq=_curry2$$module$node_modules$ramda$dist$ramda(function whereEq(spec,testObj){return(0,module$node_modules$ramda$dist$ramda.default.where)((0,module$node_modules$ramda$dist$ramda.default.map)(module$node_modules$ramda$dist$ramda.default.equals,spec),testObj)});
module$node_modules$ramda$dist$ramda.default.without=_curry2$$module$node_modules$ramda$dist$ramda(function(xs,list){return(0,module$node_modules$ramda$dist$ramda.default.reject)((0,module$node_modules$ramda$dist$ramda.default.flip)(_contains$$module$node_modules$ramda$dist$ramda)(xs),list)});
module$node_modules$ramda$dist$ramda.default.xprod=_curry2$$module$node_modules$ramda$dist$ramda(function xprod(a,b){var idx=0;var ilen=a.length;var j;var jlen=b.length;var result=[];while(idx<ilen){j=0;while(j<jlen){result[result.length]=[a[idx],b[j]];j+=1}idx+=1}return result});module$node_modules$ramda$dist$ramda.default.zip=_curry2$$module$node_modules$ramda$dist$ramda(function zip(a,b){var rv=[];var idx=0;var len=Math.min(a.length,b.length);while(idx<len){rv[idx]=[a[idx],b[idx]];idx+=1}return rv});
module$node_modules$ramda$dist$ramda.default.zipObj=_curry2$$module$node_modules$ramda$dist$ramda(function zipObj(keys,values){var idx=0;var len=Math.min(keys.length,values.length);var out={};while(idx<len){out[keys[idx]]=values[idx];idx+=1}return out});module$node_modules$ramda$dist$ramda.default.zipWith=_curry3$$module$node_modules$ramda$dist$ramda(function zipWith(fn,a,b){var rv=[];var idx=0;var len=Math.min(a.length,b.length);while(idx<len){rv[idx]=fn(a[idx],b[idx]);idx+=1}return rv});
Object.defineProperty(module$node_modules$ramda$dist$ramda.default,"__esModule",{value:true});var module$utils$vertex={};const R$$module$utils$vertex=module$node_modules$ramda$dist$ramda.default;const u$$module$utils$vertex=module$utils$utils.default;
module$utils$vertex.default=class{constructor(id,name,obj=undefined){this._id=id;this._name=name;this._args=[];this._math=undefined;this._enum=[];this._comparator=[];this._func=module$utils$utils.default.alwaysUndef;this._round=undefined;this._path=undefined;this._errState="Not init";this._fallback=undefined;if(obj){this._id=obj.I;this.name=obj.N;this.setFallback(obj.D);this.setMath(obj.M);obj.E.forEach((e)=>this.addEnum(...e));this.setRound(obj.R);this.setPath(...obj.P);this.setComparator(...obj.C)}}dump(){return{I:this.id,
N:this.name,A:this._args,D:this._fallback,M:this._math,E:this._enum,R:this._round,P:this._path,C:this._comparator}}get id(){return this._id}get name(){return this._name}set name(n){this._name=n}setFallback(n){this._fallback=n;return this}get fallback(){return this._fallback}addArg(n){this._args.push(n._id);this._errState="Changed";return this}delArg(n){this._args=this._args.filter((e)=>e!==n._id);this._errState="Changed";return this}get args(){return this._args}setPath(...a){this._path=[...a];if(this._path.length){this._enum=
[];this._comparator=[];this._round=undefined;this._math=undefined}this._errState="Changed";return this}get path(){return this._path}setMath(s){this._math=s;if(module$utils$utils.default.isDef(s)){this._path=[];this._enum=[];this._round=undefined;this._comparator=[]}this._errState="Changed";return this}get math(){return this._math}setRound(int){if(module$utils$utils.default.isNumber(int)){this._round=module$utils$utils.default.pRound(0)(int);this._path=[];this._math=undefined;this._enum=[];this._comparator=
[];this._errState="Changed"}return this}get round(){return this._round}setComparator(v1,cmp,v2,outputFormat){let isClean=true;isClean=(module$utils$utils.default.isNumber(v1)||module$utils$utils.default.isRefString(v1))&&isClean;isClean=["!=","!==","==","===","<=",">=","<",">"].includes(cmp)&&isClean;isClean=(module$utils$utils.default.isNumber(v2)||module$utils$utils.default.isRefString(v2))&&isClean;isClean=["vu","10","tf","ab"].includes(outputFormat)&&isClean;if(isClean){this._comparator=[v1,cmp,
v2,outputFormat];this._enum=[];this._path=[];this._math=undefined;this._round=undefined;this._errState="Changed"}return this}get comparator(){return this._comparator}addEnum(k,v){if(k===undefined)return this;this._enum=module$utils$utils.default.enumSet(this._enum,k,v);this._path=[];this._math=undefined;this._round=undefined;this._comparator=[];this._errState="Changed";return this}delEnum(k){this._enum=module$utils$utils.default.enumUnSet(this._enum,k);this._errState="Changed";return this}get enum(){return this._enum}clean(){if(this._math)[this._errState,
this._func]=module$utils$utils.default.mathFunc(this._math,this.args);else if(this._enum&&this._enum.length){const r=this.enum.map(([k,v])=>module$utils$utils.default.isString(v)&&module$utils$utils.default.isRefString(v)?[k,(X)=>X[module$utils$utils.default.getRefIndex(v)]]:[k,()=>v]);const m=new Map(r);this._func=(X)=>m.get(X[0])?m.get(X[0])(X):undefined;this._errState=null}else if(module$utils$utils.default.isDef(this._round)){const r=module$utils$utils.default.pRound(this._round);this._func=(X)=>
r(X[0]);this._errState=null}else if(this.comparator&&this.comparator.length){let [v1,cmp,v2,outputFormat]=this.comparator;const r1=module$utils$utils.default.isString(v1)?(X)=>X[module$utils$utils.default.getRefIndex(v1)]:()=>v1;const r2=module$utils$utils.default.isString(v2)?(X)=>X[module$utils$utils.default.getRefIndex(v2)]:()=>v2;const t=module$utils$utils.default.makeComparator(cmp);const outF=module$utils$utils.default.genOutput(outputFormat);this._func=(X)=>{const [s1,s2]=[r1(X),r2(X)];return outF(t(s1,
s2),s1,s2)};this._errState=null}else if(this._path&&this._path.length){if(module$utils$utils.default.sameArr(this._path,[null]))this._func=(X,data)=>data;else this._func=(X,data)=>module$node_modules$ramda$dist$ramda.default.pathOr(undefined,this._path)(data);this._errState=null}else if(this._fallback){this._func=()=>this._fallback;this._errState=null}return this}solve(p,topoIds,opt_d){const argArr=this.args.map((id)=>p[topoIds.indexOf(id)]);if(!this._errState){const result=this._func(argArr,opt_d);
return result===undefined?[null,this.fallback]:[null,result]}else this.clean();if(!this._errState)return this.solve(p,topoIds);return[this._errState,undefined]}};var module$dag={};const u$$module$dag=module$utils$utils.default;const Node$$module$dag=module$utils$vertex.default;const nodeMaker$$module$dag=(gen)=>(n)=>new module$utils$vertex.default(gen.next().value,n);
module$dag.default=class{constructor(){this.G=new Map;this._nodeMaker=nodeMaker$$module$dag(module$utils$utils.default.idGen());this._rootNode=this.makeNode("ROOT");this._rootNode.setMath("$1")}get root(){return this._rootNode}get nodes(){return[...this.G.keys()]}get graph(){return this.G}get topo(){return module$utils$utils.default.topoSort(this.G)}get leafs(){const [,Q]=module$utils$utils.default.leafNodes(this.G);return Q}get orphans(){const orphans=[];for(const [n,s]of this.G.entries())if(s.size===
0&&n!==this._rootNode)orphans.push(n);return orphans}get names(){return this.nodes.map((e)=>e.name)}get topoNames(){return this.topo.map((e)=>e.name)}get ids(){return this.nodes.map((e)=>e.id)}get topoIds(){return this.topo.map((e)=>e.id)}makeNode(name){const n=this._nodeMaker(name);this.G.set(n,new Set);return n}addNode(n){if(this.G.has(n))return n;if(this.ids.includes(n.id))return false;this.G.set(n,new Set);this._nodeMaker=nodeMaker$$module$dag(module$utils$utils.default.idGen(module$utils$utils.default.max(this.ids)));
return n}delNode(n){let deleted=false;if(n&&n!==this._rootNode){deleted=this.G.delete(n);if(deleted)for(const [k,s]of this.G.entries()){s.delete(n);k.delArg(n)}}return deleted}connect(a,b){if(a===this.root)return this;if(b===this.root&&this.indegrees(b).length>0)return this;if(!this.G.has(a)||!this.G.has(b))return this;if(this.G.get(a).has(b))return this;this.G.get(a).add(b);b.addArg(a);if(this.topo.length<this.nodes.length)this.disconnect(a,b);return this}disconnect(a,b){if(this.G.has(a)){this.G.get(a).delete(b);
b.delArg(a)}return this}clean(){this.orphans.forEach((e)=>this.delNode(e));if(this.orphans.length)this.clean();this.nodes.forEach((n)=>n.clean());return this}indegrees(n){const hasN=module$utils$utils.default.isIn(n);return[...this.G.entries()].reduce(hasN,[])}outdegrees(n){return[...this.G.get(n)]}getIdG(){return[...this.G].reduce((p,[k,s])=>p.set(k.id,new Set([...s].map(module$utils$utils.default.grabId))),new Map)}solve(opt_d){return this.getSolver()(opt_d)}debug(opt_d){return this.getSolver(true)(opt_d)}getSolver(debug=
false){const m=module$utils$utils.default.removeOrphans(this.getIdG());const validTopoNodes=this.topo.filter((e)=>m.has(e.id));const validTopoIds=validTopoNodes.map(module$utils$utils.default.grabId);const cleanNodes=validTopoNodes.map((n)=>n.clean());const errs=[];return(opt_d)=>{const r=cleanNodes.reduce((p,n)=>{const [err,s]=n.solve(p,validTopoIds,opt_d);errs.push(err);p.push(s);return p},[]);return debug?r:module$utils$utils.default.tail(r)}}dump(){return JSON.stringify({G:[...this.getIdG()].map(([k,
s])=>[k,[...s]]),N:this.topo.map((e)=>e.dump())})}read(json){const j=module$utils$utils.default.safeJsonParse(json);const rollback=this.dump();if(j)try{this.G=new Map;this._rootNode=undefined;const n=j.N.map((e)=>new module$utils$vertex.default(undefined,undefined,e));const matchId=(id)=>(e)=>e.id===id;const findNode=(id)=>n.find(matchId(id));const g=new Map(j.G);this._rootNode=undefined;for(const k of g.keys())this.addNode(findNode(k));this._rootNode=this.nodes[0];for(const [k,arr]of g.entries()){const node=
findNode(k);arr.forEach((id)=>{const toNode=findNode(id);this.connect(node,toNode)})}this.nodes.forEach((n)=>{n._args=j.N.find((e)=>e.I===n.id).A});return true}catch(e){this.read(rollback)}}};})();
