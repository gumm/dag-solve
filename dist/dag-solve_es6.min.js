'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(d,g,e){d!=Array.prototype&&d!=Object.prototype&&(d[g]=e.value)};$jscomp.getGlobal=function(d){return"undefined"!=typeof window&&window===d?d:"undefined"!=typeof global&&null!=global?global:d};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(d,g,e,k){if(g){e=$jscomp.global;d=d.split(".");for(k=0;k<d.length-1;k++){var h=d[k];h in e||(e[h]={});e=e[h]}d=d[d.length-1];k=e[d];g=g(k);g!=k&&null!=g&&$jscomp.defineProperty(e,d,{configurable:!0,writable:!0,value:g})}};$jscomp.polyfill("Array.prototype.includes",function(d){return d?d:function(d,e){var g=this;g instanceof String&&(g=String(g));var h=g.length;e=e||0;for(0>e&&(e=Math.max(e+h,0));e<h;e++){var q=g[e];if(q===d||Object.is(q,d))return!0}return!1}},"es7","es3");
$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.Symbol=function(){var d=0;return function(g){return $jscomp.SYMBOL_PREFIX+(g||"")+d++}}();
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var d=$jscomp.global.Symbol.iterator;d||(d=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[d]&&$jscomp.defineProperty(Array.prototype,d,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};$jscomp.arrayIterator=function(d){var g=0;return $jscomp.iteratorPrototype(function(){return g<d.length?{done:!1,value:d[g++]}:{done:!0}})};
$jscomp.iteratorPrototype=function(d){$jscomp.initSymbolIterator();d={next:d};d[$jscomp.global.Symbol.iterator]=function(){return this};return d};$jscomp.iteratorFromArray=function(d,g){$jscomp.initSymbolIterator();d instanceof String&&(d+="");var e=0,k={next:function(){if(e<d.length){var h=e++;return{value:g(h,d[h]),done:!1}}k.next=function(){return{done:!0,value:void 0}};return k.next()}};k[Symbol.iterator]=function(){return k};return k};
$jscomp.polyfill("Array.prototype.values",function(d){return d?d:function(){return $jscomp.iteratorFromArray(this,function(d,e){return e})}},"es8","es3");
var Dag=function(){function*d(a){for(a=a?a+1:0;;)yield a++}const g=(...a)=>{},e=(...a)=>!1;(new Map).set("true",!0).set("false",!1);const k=(a)=>void 0!==a,h=(a)=>"number"===typeof a&&!Number.isNaN(a),q=(a,b)=>a.length===b.length&&a.every((a,f)=>b[f]===a),u=(a,b)=>(c)=>{c=b.reduce((a,b)=>{try{return a[b]}catch(m){}},c);return void 0===c?a:c},v=(a)=>{const b=Math.pow(10,a);return(a)=>Math.round(a*b)/b},n=(a)=>"string"===typeof a&&!Number.isNaN(parseInt(a.split("$").join(""),10)-1),E=(a,b)=>a.filter((a)=>
a[0]!==b),F=(a)=>{let b;try{b=JSON.parse(a)}catch(c){}return b},G=new Map([["!=",(a,b)=>a!=b],["==",(a,b)=>a==b],["!==",(a,b)=>a!==b],["===",(a,b)=>a===b],["<=",(a,b)=>a<=b],[">=",(a,b)=>a>=b],["<",(a,b)=>a<b],[">",(a,b)=>a>b]]),w=new Map([["vu",(a,b,c)=>a?b:void 0],["10",(a,b,c)=>a?1:0],["tf",(a,b,c)=>a],["ab",(a,b,c)=>a?b:c]]),H=(a)=>{const b=[..."+-*/%()".split(""),..."0123456789.".split(""),...["$"," ","'"],..."& | ^ ~ << >> >>>".split(" "),...["int","len"]];return[...a].filter((a)=>b.includes(a)).join("")},
x=(a)=>{try{return[null,new Function("X",['const len = e => ("" + e).length;const int = e => parseInt(e, 10);',`try {return ${a};}catch(e){return;}`].join(""))]}catch(b){return[`Could not make a function with "${a}"`,g]}},I=(a,b)=>{let c="Unable to clean math",f=g;"string"===typeof a?(a=b.reduce((a,b,c)=>a.split(`$${c+1}`).join(`${"X"}.get(${b})`),H(a)),a.includes("$")||([c,f]=x(a))):[c,f]=x(a);return[c,f]},J=(a,b)=>{a=a.map(([a,c])=>{if("string"===typeof c&&n(c)){const f=parseInt(c.split("$").join(""),
10)-1;return[a,(a)=>a.get(b[f])]}return[a,()=>c]});const c=new Map(a);return[null,(a)=>{const f=c.get(a.get(b[0]));return f?f(a):void 0}]},K=(a,b)=>{const c=v(a);return[null,(a)=>c(a.get(b[0]))]},p=(a,b)=>{let c;if("string"===typeof a){const f=parseInt(a.split("$").join(""),10)-1;c=(a)=>a.get(b[f])}else c=()=>a;return c},M=(a,b)=>{const [c,f,d,m]=a,r=p(c,b),L=p(d,b),h=G.get(f)||e,k=w.get(m)||g;return[null,(a)=>{const [b,c]=[r(a),L(a)];return k(h(b,c),b,c)}]},N=(a,b)=>{let [c,f,d,m]=a;const r=p(c,
b),e=p(f,b),h=p(d,b),k=w.get(m)||g;return[null,(a)=>{const [b,c,f]=[r(a),e(a),h(a)],[d,t]=[Math.min(c,f),Math.max(c,f)];return b>=d&&b<=t?k(!0,b,d):b>=d?k(!1,b,t):k(!1,b,d)}]},O=(a,b)=>[null,q(a,[null])?(a)=>a.get(b.length?b[0]:"data"):(c)=>u(void 0,a)(c.get(b.length?b[0]:"data"))],P=([a,b],c)=>{const d=["_ev",a.toString(),b];return[null,(a)=>u(void 0,d)(a.get("data"))]},y=(a,b)=>[null,()=>a],Q=(new Map).set("Math",(a)=>void 0!==a.math).set("Enumerator",(a)=>a.enum&&a.enum.length).set("Rounding",
(a)=>void 0!==a.round).set("Comparator",(a)=>a.comparator&&a.comparator.length).set("Range",(a)=>a.between&&a.between.length).set("Data Access",(a)=>a.path&&a.path.length).set("Event Access",(a)=>a.evCode&&2===a.evCode.length).set("Constant",(a)=>void 0!==a.fallback),R=(new Map).set("Math",(a)=>I(a.math,a.args)).set("Enumerator",(a)=>J(a.enum,a.args)).set("Rounding",(a)=>K(a.round,a.args)).set("Comparator",(a)=>M(a.comparator,a.args)).set("Range",(a)=>N(a.between,a.args)).set("Data Access",(a)=>O(a.path,
a.args)).set("Event Access",(a)=>P(a.evCode,a.args)).set("Constant",(a)=>y(a.fallback,a.args)).set(void 0,(a)=>y(a.fallback,a.args)),S=(new Map).set("Math",(a)=>a.math).set("Enumerator",(a)=>a.enum.map(([a,c])=>`{${a} \ud83e\udc1a ${c}}`).join("|")).set("Rounding",(a)=>a.round).set("Comparator",(a)=>a.comparator.join(" ").replace(/([<>])/gi,String.raw`$1`)).set("Range",(a)=>a.between.join(" ")).set("Data Access",(a)=>a.path.join(" ")).set("Event Access",(a)=>a.evCode.join(" ")).set("Constant",(a)=>
a.fallback).set(void 0,(a)=>"Not Configured");class l{constructor(a,b,c=void 0){this._id=a;this._name=b;this._args=[];this._math=void 0;this._enum=[];this._comparator=[];this._between=[];this._round=void 0;this._path=[];this._evCode=[];this._fallback=void 0;this._nodus="Not init";this._func=g;c&&(this._id=c.I,this.name=c.N,this.setFallback(c.D),this.setMath(c.M),c.E.forEach((a)=>{a&&this.addEnum(...a)}),this.setRound(c.R),this.setPath(...c.P),this.setComparator(...c.C),this.setBetween(...c.B),this.setEvCode(...c.V))}dump(){return{A:this._args,
B:this._between,C:this._comparator,D:this._fallback,E:this._enum,I:this.id,M:this._math,N:this.name,P:this._path,R:this._round,V:this._evCode}}_clearAll(a=!0){this._path=[];this._enum=a?[]:this._enum;this._comparator=[];this._between=[];this._evCode=[];this._math=this._round=void 0;this._nodus="Changed"}reset(){this._clearAll(!0);this._fallback=void 0;this._nodus="Not init"}get id(){return this._id}get descr(){return S.get(this.type)(this)}get name(){return this._name}set name(a){this._name=a}get type(){const a=
[...Q.entries()].find(([,a])=>a(this));return a?a[0]:void 0}addArg(a){this._args.push(a._id);this._nodus="Args added";return this}delArg(a){this._args=this._args.filter((b)=>b!==a._id);this._nodus="Args removed";return this}get args(){return this._args}setAllArgs(a){Array.isArray(a)&&a.every(h)&&(this._args=a)}setFallback(a){this._fallback=a;return this}get fallback(){return this._fallback}setEvCode(a,b){if(void 0!==a){this._clearAll();let c="data";b&&(b=b.toLowerCase(),c=["data","desc","code"].includes(b)?
b:c);this._evCode=[a,c]}return this}get evCode(){return this._evCode}setPath(...a){[...a].length&&[...a].every(k)&&(this._clearAll(),this._path=[...a]);return this}get path(){return this._path}setMath(a){void 0!==a&&(this._clearAll(),this._math=a);return this}get math(){return this._math}setRound(a){h(a)&&(this._clearAll(),this._round=v(0)(a));return this}get round(){return this._round}setComparator(a,b,c,d){let f=!0;f=(h(a)||n(a))&&f;f=(h(c)||n(c))&&f;f="!= !== == === <= >= < >".split(" ").includes(b)&&
f;if(f=["vu","10","tf","ab"].includes(d)&&f)this._clearAll(),this._comparator=[a,b,c,d];return this}get comparator(){return this._comparator}setBetween(a,b,c,d){let f=!0;f=(h(a)||n(a))&&f;f=(h(b)||n(b))&&f;f=(h(c)||n(c))&&f;if(f=["vu","10","tf","ab"].includes(d)&&f)this._clearAll(),this._between=[a,b,c,d];return this}get between(){return this._between}addEnum(a,b){if(void 0===a)return this;this._clearAll(!1);this._enum=[...(new Map(this._enum)).set(a,b).entries()];return this}delEnum(a){this._enum=
E(this._enum,a);this._nodus="Changed";return this}get enum(){return this._enum}clean(){const [a,b]=R.get(this.type)(this);this._nodus=a;this._func=b;return this}solve(a){if(this._nodus)this.clean();else{const b=this._func(a);return a.set(this._id,void 0===b?this.fallback:b)}return this._nodus?(a.set(this._id,void 0),a.set(`err_${this._id}`,!this._nodus),a):this.solve(a)}static isIn(a){return(b,[c,d])=>d.has(a)?b.push(c)&&b:b}}const T=(a)=>(b)=>{const c=b.id,d=b.name,g="ROOT"===d?"Root":b.type,m="ROOT"===
d?"Final":b.descr,e=b.args.map((a,b)=>`<${a}>$${b+1}`).join("|");b=(b=b.fallback)?`|Default: ${b}`:"";const h=a?`|${a.get(c)}`:"";return`${c} [label="{{${e}}|${g}|${m}|{ID:${c}|${d}}${b}${h}}"];`},U=(a)=>(b,c)=>{const d=a?a.get(b.id):"";return`${b.id} -> ${c.id}:${b.id}[label="${d}"]`},V=(a,b)=>{const c=U(b),d=[...a.G.entries()].reduce((a,[b,c])=>[...a,...[...c].map((a)=>[b,a])],[]).map(([a,b])=>c(a,b)).reduce((a,b)=>`${a} ${b};`,"");b=T(b);b=a.nodes.map(b).join(" ");let g=a.description;g=a.units.trim().length?
`${g} - ${a.units}`:g;return["digraph { node [shape=record];",`label = "${g}";`,`${b}`,`${d}`,"}"].join(" ")},z=(a)=>a.id,A=(a)=>{const b=[...a.keys()].reduce((a,b)=>a.set(b,0)||a,new Map);[...a.values()].forEach((a)=>a.forEach((a)=>b.set(a,b.has(a)?b.get(a)+1:0)));a=[...a.keys()].filter((a)=>0===b.get(a));return{C:b,Q:a}},W=(a)=>{const {C:b,Q:c}=A(a),d=[];for(;c.length;){const f=c.pop();d.push(f);a.get(f).forEach((a)=>{b.set(a,b.get(a)-1);0===b.get(a)&&c.push(a)})}return d},B=(a)=>{for(const [b,
c]of a.entries())if(0===c.size&&0!==b){a.delete(b);for(const c of a.values())c.delete(b)}[...a.entries()].reduce((a,c)=>a||0===c[1].size&&0!==c[0],!1)&&B(a);return a},C=(a)=>(b)=>new l(a.next().value,b);class D{constructor(a,b){this._meta=null;this._ref=this.ref=void 0!==b?b:null;this._description=this.description="string"===typeof a?a:"";this._units="";this.G=new Map;this._nodeMaker=C(d());this._rootNode=this.makeNode("ROOT");this._rootNode.setMath("$1")}get meta(){return this._meta}set meta(a){this._meta=
a}get description(){return this._description}set description(a){this._description="string"===typeof a?a:this._description}get units(){return this._units}set units(a){this._units="string"===typeof a?a:this._units}get ref(){return this._ref}set ref(a){this._ref=void 0===a||"string"!==typeof a&&!h(a)?null:a}get root(){return this._rootNode}get nodes(){return[...this.G.keys()]}getNode(a){return[...this.G.keys()].find((b)=>b.id===a)}get graph(){return this.G}get topo(){return W(this.G)}get leafs(){return A(this.G).Q}get orphans(){const a=
[];for(const [b,c]of this.G.entries())0===c.size&&b!==this._rootNode&&a.push(b);return a}get names(){return this.nodes.map((a)=>a.name)}get topoNames(){return this.topo.map((a)=>a.name)}get ids(){return this.nodes.map((a)=>a.id)}get topoIds(){return this.topo.map((a)=>a.id)}makeNode(a){a=this._nodeMaker(a);this.G.set(a,new Set);return a}addNode(a){if(!(a instanceof l)||this.ids.includes(a.id))return!1;if(this.G.has(a))return a;this.G.set(a,new Set);this._nodeMaker=C(d(Math.max(...this.ids)));return a}delNode(a){let b=
!1;if(a&&a instanceof l&&a!==this._rootNode&&(b=this.G.delete(a)))for(const [b,d]of this.G.entries())d.delete(a),b.delArg(a);return b}connect(a,b){if(!(a instanceof l&&b instanceof l))return!1;if(a===this.root||b===this.root&&0<this.indegrees(b).length||!this.G.has(a)||!this.G.has(b)||this.G.get(a).has(b))return this;this.G.get(a).add(b);b.addArg(a);this.topo.length<this.nodes.length&&this.disconnect(a,b);return this}disconnect(a,b){if(!(a instanceof l&&b instanceof l))return!1;this.G.has(a)&&(this.G.get(a).delete(b),
b.delArg(a));return this}clean(){this.orphans.forEach((a)=>this.delNode(a));this.orphans.length&&this.clean();this.nodes.forEach((a)=>a.clean());return this}indegrees(a){if(!(a instanceof l))return!1;a=l.isIn(a);return[...this.G.entries()].reduce(a,[])}outdegrees(a){return a instanceof l?[...this.G.get(a)]:!1}getIdG(){return[...this.G].reduce((a,[b,c])=>a.set(b.id,new Set([...c].map(z))),new Map)}solve(a){return this.getSolver()(a)}debug(a){return this.getSolver(!0)(a)}debugFormatter(a){return a.set("topoNames",
this.topoNames)}getSolver(a=!1){const b=B(this.getIdG()),c=this.topo.filter((a)=>b.has(a.id)),d=c.map(z),g=c.map((a)=>a.clean()),e=this._rootNode.id,h=new Map;h.set("topoIds",d);return(b)=>{h.set("data",b);b=g.reduce((a,b)=>b.solve(a),h);return a?this.debugFormatter(b):b.get(e)}}dump(){return JSON.stringify({M:[this.description,this.units,this.ref],G:[...this.getIdG()].map(([a,b])=>[a,[...b]]),N:this.topo.map((a)=>a.dump())})}dotPlot(a){a=void 0!==a?this.debug(a):void 0;return V(this,a)}static read(a){const b=
F(a);if(b)try{const a=b.N.map((a)=>new l(-1,void 0,a)),d=(a)=>(b)=>b.id===a,g=new Map(b.G),e=new D;e.G=new Map;for(const b of g.keys())e.addNode(a.find(d(b)));e._rootNode=e.nodes[0];for(const [b,c]of g.entries()){const f=a.find(d(b));c.forEach((b)=>{b=a.find(d(b));e.connect(f,b)})}e.nodes.forEach((a)=>{a.setAllArgs(b.N.find((b)=>b.I===a.id).A)});e.description=b.M?b.M[0]||"":"";e.units=b.M?b.M[1]||"":"";e.ref=b.M?b.M[2]:null;return e}catch(c){console.log(c)}}}return D}();
